{"version":3,"sources":["assets/scripts/PlayableState.js"],"names":["StateMachine","require","visualize","Transition","cc","Enum","PLAY","ACTION1","ACTION2","ACTION3","State","IDLE","STEP1","STEP2","STEP3","FINISH","PlayableState","Class","properties","fsm","type","serializable","visible","ctor","load","init","transitions","name","from","to","methods","onInvalidTransition","transition","console","error","onPendingTransition","onBeforeMelt","log","Promise","resolve","reject","setTimeout","onMelt","onFreeze","onVaporize","onCondense","state","melt","e","bind","freeze"],"mappings":"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","sourceRoot":"/","sourcesContent":["var StateMachine = require('state-machine');\r\nvar visualize = require('state-machine-visualize');\r\nvar Transition = cc.Enum({\r\n    PLAY   : \"play\",\r\n    ACTION1: \"action1\",\r\n    ACTION2: 'action2',\r\n    ACTION3: 'action3'\r\n});\r\nvar State = cc.Enum({\r\n    IDLE:\"idle\",\r\n    STEP1:\"step1\",\r\n    STEP2:\"step2\",\r\n    STEP3:'step3',\r\n    FINISH:\"finish\"\r\n});\r\n\r\nvar PlayableState = cc.Class({\r\n    properties: {\r\n        fsm: {\r\n            default:null,\r\n            type:StateMachine,\r\n            serializable: false,\r\n            visible:false\r\n        }\r\n    },\r\n    ctor:function () {},\r\n    load:function (){\r\n        this.fsm = new StateMachine({\r\n            init: State.IDLE,\r\n            transitions: [\r\n                {name: Transition.PLAY, from: State.IDLE, to: State.STEP1},\r\n                {name: Transition.ACTION1, from: State.STEP1, to: State.STEP2},\r\n                {name: Transition.ACTION2, from: State.STEP2, to: State.STEP3},\r\n                {name: Transition.ACTION3, from: State.STEP3, to: State.FINISH}\r\n            ],\r\n            methods: {\r\n                onInvalidTransition: function(transition, from, to) {console.error(\"onInvalidTransition\");},\r\n                onPendingTransition: function(transition, from, to) {console.error(\"onPendingTransition\");},\r\n                onBeforeMelt: function() {\r\n                    console.log('onEnter melted');\r\n                    return new Promise(function(resolve, reject) {\r\n                        setTimeout(function () {\r\n                            console.log('onEnter melted done');\r\n                            reject(\"abc\");\r\n                        },200);\r\n                    })\r\n                },\r\n                onMelt:     function() { console.log('I melted')    },\r\n                onFreeze:   function() { console.log('I froze')     },\r\n                onVaporize: function() { console.log('I vaporized') },\r\n                onCondense: function() { console.log('I condensed') }\r\n            }\r\n        });\r\n        console.log(\"before\"+this.fsm.state);\r\n        try {\r\n            this.fsm.melt();\r\n        }catch (e) {\r\n            console.log(\"catch day nef\");\r\n        }\r\n        console.log(\"after\"+this.fsm.state);\r\n        setTimeout(function () {\r\n            console.log(\"after1\"+this.fsm.state);\r\n            console.log(this.fsm.state);\r\n        }.bind(this),500);\r\n        setTimeout(function () {\r\n            console.log(\"continue meltd\");\r\n            this.fsm.melt();\r\n            // console.log(\"freeeze\");\r\n            // this.fsm.freeze();\r\n            console.log(this.fsm.state);\r\n        }.bind(this),1000);\r\n        this.fsm.freeze();\r\n        console.log(this.fsm.state);\r\n        console.log(visualize(this.fsm));\r\n    }\r\n\r\n});"]}