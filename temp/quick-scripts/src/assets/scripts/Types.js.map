{"version":3,"sources":["assets/scripts/Types.js"],"names":["Rank","Suit","Card","point","suit","Object","defineProperties","value","writable","id","pointName","get","suitName","isBlackSuit","isRedSuit","isAce","isFace","prototype","toString","cards","Array","fromId","from","indexOf","Player","index","name","gold","avatar","undefined","Table","stake","pot","createCards","s","p","card","module","exports"],"mappings":";;;;;;AAAA,IAAIA,IAAI,GAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA+B,GAA/B,EAAoC,IAApC,EAA0C,GAA1C,EAA+C,GAA/C,EAAoD,GAApD,EAAyD,GAAzD,EAA8D,GAA9D,CAAf;AACA,IAAIC,IAAI,GAAO,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAf;AAEA;;;;;;;;;AAQA,SAASC,IAAT,CAAcC,KAAd,EAAqBC,IAArB,EAA2B;AACvBC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;AAC1BH,IAAAA,KAAK,EAAE;AACHI,MAAAA,KAAK,EAAKJ,KADP;AAEHK,MAAAA,QAAQ,EAAE;AAFP,KADmB;AAM1BJ,IAAAA,IAAI,EAAE;AACFG,MAAAA,KAAK,EAAKH,IADR;AAEFI,MAAAA,QAAQ,EAAE;AAFR,KANoB;;AAW1B;;;AAGAC,IAAAA,EAAE,EAAE;AACAF,MAAAA,KAAK,EAAMH,IAAD,GAAS,EAAT,GAAeD,KADzB;AAEAK,MAAAA,QAAQ,EAAE;AAFV,KAdsB;AAmB1B;AACAE,IAAAA,SAAS,EAAI;AACTC,MAAAA,GAAG,EAAE,eAAY;AACb,eAAOX,IAAI,CAAC,KAAKG,KAAN,CAAX;AACH;AAHQ,KApBa;AAyB1BS,IAAAA,QAAQ,EAAK;AACTD,MAAAA,GAAG,EAAE,eAAY;AACb,eAAOV,IAAI,CAAC,KAAKG,IAAN,CAAX;AACH;AAHQ,KAzBa;AA8B1BS,IAAAA,WAAW,EAAE;AACTF,MAAAA,GAAG,EAAE,eAAY;AACb,eAAO,KAAKP,IAAL,KAAc,CAAd,IAAmB,KAAKA,IAAL,KAAc,CAAxC;AACH;AAHQ,KA9Ba;AAmC1BU,IAAAA,SAAS,EAAI;AACTH,MAAAA,GAAG,EAAE,eAAY;AACb,eAAO,KAAKP,IAAL,KAAc,CAAd,IAAmB,KAAKA,IAAL,KAAc,CAAxC;AACH;AAHQ,KAnCa;AAwC1BW,IAAAA,KAAK,EAAC;AACFJ,MAAAA,GAAG,EAAE,eAAY;AACb,eAAO,KAAKR,KAAL,KAAe,EAAtB;AACH;AAHC,KAxCoB;AA6C1Ba,IAAAA,MAAM,EAAC;AACHL,MAAAA,GAAG,EAAE,eAAY;AACb,eAAO,KAAKR,KAAL,IAAc,CAAd,IAAmB,KAAKA,KAAL,IAAa,EAAvC;AACH;AAHE;AA7CmB,GAA9B;AAmDH;;AAEDD,IAAI,CAACe,SAAL,CAAeC,QAAf,GAA0B,YAAY;AAClC,SAAO,KAAKR,SAAL,GAAiB,KAAKE,QAA7B;AACH,CAFD,EAIA;;;AACA,IAAIO,KAAK,GAAG,IAAIC,KAAJ,CAAU,EAAV,CAAZ;AAEA;;;;;AAIAlB,IAAI,CAACmB,MAAL,GAAc,UAAUZ,EAAV,EAAc;AACxB,SAAOU,KAAK,CAACV,EAAD,CAAZ;AACH,CAFD;;AAGAP,IAAI,CAACoB,IAAL,GAAY,UAAUnB,KAAV,EAAiBC,IAAjB,EAAuB;AAC/B,SAAOF,IAAI,CAACmB,MAAL,CAAYrB,IAAI,CAACuB,OAAL,CAAapB,KAAb,IAAsBF,IAAI,CAACsB,OAAL,CAAanB,IAAb,IAAqB,EAAvD,CAAP;AACH,CAFD;;AAGA,SAASoB,MAAT,CAAgBC,KAAhB,EAAsBC,IAAtB,EAA2BC,IAA3B,EAAgCC,MAAhC,EAAuCT,KAAvC,EAA6C;AACzCQ,EAAAA,IAAI,GAAGA,IAAI,KAAKE,SAAT,GAAqB,CAArB,GAAyBF,IAAhC;AACAC,EAAAA,MAAM,GAAGA,MAAM,KAAKC,SAAX,GAAuB,CAAvB,GAA2BD,MAApC;AACAT,EAAAA,KAAK,GAAGA,KAAK,KAAKU,SAAV,GAAsB,EAAtB,GAA2BV,KAAnC;AACAd,EAAAA,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;AAC1BmB,IAAAA,KAAK,EAAC;AACFlB,MAAAA,KAAK,EAAKkB,KADR;AAEFjB,MAAAA,QAAQ,EAAE;AAFR,KADoB;AAK1BkB,IAAAA,IAAI,EAAE;AACFnB,MAAAA,KAAK,EAAKmB,IADR;AAEFlB,MAAAA,QAAQ,EAAE;AAFR,KALoB;AAS1BmB,IAAAA,IAAI,EAAC;AACDnB,MAAAA,QAAQ,EAAE,IADT;AAEDD,MAAAA,KAAK,EAACoB;AAFL,KATqB;AAa1BC,IAAAA,MAAM,EAAC;AACHpB,MAAAA,QAAQ,EAAE,IADP;AAEHD,MAAAA,KAAK,EAACqB;AAFH,KAbmB;AAiB1BT,IAAAA,KAAK,EAAC;AACFX,MAAAA,QAAQ,EAAC,IADP;AAEFD,MAAAA,KAAK,EAACY;AAFJ;AAjBoB,GAA9B;AAsBH;;AACD,SAASW,KAAT,CAAerB,EAAf,EAAkBsB,KAAlB,EAAwBC,GAAxB,EAA4B;AACxB3B,EAAAA,MAAM,CAACC,gBAAP,CAAwB,IAAxB,EAA8B;AAC1BG,IAAAA,EAAE,EAAE;AACAF,MAAAA,KAAK,EAAKE,EADV;AAEAD,MAAAA,QAAQ,EAAE;AAFV,KADsB;AAK1BuB,IAAAA,KAAK,EAAE;AACHxB,MAAAA,KAAK,EAAKwB,KADP;AAEHvB,MAAAA,QAAQ,EAAE;AAFP,KALmB;AAS1BwB,IAAAA,GAAG,EAAC;AACAxB,MAAAA,QAAQ,EAAE,IADV;AAEAD,MAAAA,KAAK,EAACyB;AAFN;AATsB,GAA9B;AAcH,EAED;;;AACA,CAAC,SAASC,WAAT,GAAuB;AACpB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxB,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,UAAIC,IAAI,GAAS,IAAIlC,IAAJ,CAASiC,CAAT,EAAYD,CAAZ,CAAjB;AACAf,MAAAA,KAAK,CAACiB,IAAI,CAAC3B,EAAN,CAAL,GAAiB2B,IAAjB;AACH;AACJ;AACJ,CAPD;;AASAC,MAAM,CAACC,OAAP,GAAiB;AACbtC,EAAAA,IAAI,EAAEA,IADO;AAEbC,EAAAA,IAAI,EAAEA,IAFO;AAGbC,EAAAA,IAAI,EAAEA,IAHO;AAIbsB,EAAAA,MAAM,EAACA,MAJM;AAKbM,EAAAA,KAAK,EAACA;AALO,CAAjB","sourceRoot":"/","sourcesContent":["var Rank     = [\"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"J\", \"Q\", \"K\", \"A\", \"2\"];\r\nvar Suit     = [\"♣\", \"♠\", \"♥\", \"♦\"];\r\n\r\n/**\r\n * 扑克牌类，只用来表示牌的基本属性，不包含游戏逻辑，所有属性只读，\r\n * 因此全局只需要有 52 个实例（去掉大小王），不论有多少副牌\r\n * @class Card\r\n * @constructor\r\n * @param {Number} point - 0->12\r\n * @param {Suit} suit - 0->3\r\n */\r\nfunction Card(point, suit) {\r\n    Object.defineProperties(this, {\r\n        point: {\r\n            value   : point,\r\n            writable: false\r\n        },\r\n\r\n        suit: {\r\n            value   : suit,\r\n            writable: false\r\n        },\r\n\r\n        /**\r\n         * @property {Number} id - 可能的值为 0 到 51\r\n         */\r\n        id: {\r\n            value   : (suit) * 13 + (point),\r\n            writable: false\r\n        },\r\n\r\n        //\r\n        pointName  : {\r\n            get: function () {\r\n                return Rank[this.point];\r\n            }\r\n        },\r\n        suitName   : {\r\n            get: function () {\r\n                return Suit[this.suit];\r\n            }\r\n        },\r\n        isBlackSuit: {\r\n            get: function () {\r\n                return this.suit === 0 || this.suit === 1;\r\n            }\r\n        },\r\n        isRedSuit  : {\r\n            get: function () {\r\n                return this.suit === 2 || this.suit === 3;\r\n            }\r\n        },\r\n        isAce:{\r\n            get: function () {\r\n                return this.point === 11;\r\n            }\r\n        },\r\n        isFace:{\r\n            get: function () {\r\n                return this.point >= 8 && this.point <=10;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nCard.prototype.toString = function () {\r\n    return this.pointName + this.suitName;\r\n};\r\n\r\n//bo bai 52 quan\r\nvar cards = new Array(52);\r\n\r\n/**\r\n * get card from id\r\n * @param {Number} id - 0 -> 51\r\n */\r\nCard.fromId = function (id) {\r\n    return cards[id];\r\n};\r\nCard.from = function (point, suit) {\r\n    return Card.fromId(Rank.indexOf(point) + Suit.indexOf(suit) * 13);\r\n};\r\nfunction Player(index,name,gold,avatar,cards){\r\n    gold = gold === undefined ? 0 : gold;\r\n    avatar = avatar === undefined ? 0 : avatar;\r\n    cards = cards === undefined ? [] : cards;\r\n    Object.defineProperties(this, {\r\n        index:{\r\n            value   : index,\r\n            writable: false\r\n        },\r\n        name: {\r\n            value   : name,\r\n            writable: false\r\n        },\r\n        gold:{\r\n            writable: true,\r\n            value:gold\r\n        },\r\n        avatar:{\r\n            writable: true,\r\n            value:avatar\r\n        },\r\n        cards:{\r\n            writable:true,\r\n            value:cards\r\n        }\r\n    });\r\n}\r\nfunction Table(id,stake,pot){\r\n    Object.defineProperties(this, {\r\n        id: {\r\n            value   : id,\r\n            writable: false\r\n        },\r\n        stake: {\r\n            value   : stake,\r\n            writable: false\r\n        },\r\n        pot:{\r\n            writable: true,\r\n            value:pot\r\n        },\r\n    });\r\n}\r\n\r\n//auto creator\r\n(function createCards() {\r\n    for (var s = 0; s < 4; s++) {\r\n        for (var p = 0; p < 13; p++) {\r\n            var card       = new Card(p, s);\r\n            cards[card.id] = card;\r\n        }\r\n    }\r\n})();\r\n\r\nmodule.exports = {\r\n    Rank: Rank,\r\n    Suit: Suit,\r\n    Card: Card,\r\n    Player:Player,\r\n    Table:Table\r\n};"]}