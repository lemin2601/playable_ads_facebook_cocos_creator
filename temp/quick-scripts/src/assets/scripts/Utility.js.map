{"version":3,"sources":["assets\\scripts\\Utility.js"],"names":["Utility","units","prefix","l","div","formatMoney","money","unit","separator","undefined","formatAlignNumber","formatMoneyFull","number","isFull","isNegative","Math","abs","round","numString","toString","curIndex","length","slice","i","tmpNumArr","split","fixedLength","insertAt","substr","runUpdateGold","label","curGold","tarGold","funcFormat","cbInterval","cbDone","speratorFuncFormat","unitFuncFormat","postfix","string","numOfUpdate","delay","offset","node","runAction","cc","sequence","repeat","delayTime","callFunc","sender","floor","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var Utility = {};\r\nUtility.units = [\r\n    {prefix: 'G', l: 12, div: 1000000000000},\r\n    {prefix: 'B', l: 9, div: 1000000000},\r\n    {prefix: 'M', l: 6, div: 1000000},\r\n    {prefix: 'K', l: 4, div: 1000},\r\n    {prefix: '', l: 3, div: 1}\r\n];\r\n/**\r\n *\r\n * @param money\r\n * @param unit\r\n * @param separator\r\n * @returns {*}\r\n */\r\nUtility.formatMoney = function(money, unit, separator){\r\n    if(unit === undefined) unit = \"\";\r\n\r\n    return unit + Utility.formatAlignNumber(money, separator);\r\n};\r\n\r\n/**\r\n *\r\n * @param money\r\n * @param unit\r\n * @param separator\r\n * @returns {*}\r\n */\r\nUtility.formatMoneyFull = function(money, unit, separator){\r\n    if(unit === undefined) unit = \"\";\r\n\r\n    return unit + Utility.formatAlignNumber(money, separator, true);\r\n};\r\n\r\n/**\r\n *\r\n * @param number\r\n * @param separator\r\n * @param isFull\r\n * @returns {*}\r\n */\r\nUtility.formatAlignNumber = function(number, separator, isFull){\r\n    if(number === undefined) return \"0\";\r\n\r\n    number -= -0.1; //magic\r\n    if(separator === undefined){\r\n        separator = \",\";\r\n    }\r\n\r\n    if(isFull === undefined){\r\n        isFull = false;\r\n    }\r\n\r\n    var isNegative = number < 0;\r\n    number = Math.abs(Math.round(number));\r\n    var numString = number.toString();\r\n\r\n    if(isFull){\r\n        var curIndex = numString.length - 3;\r\n\r\n        while(curIndex > 0){\r\n            numString = numString.slice(0, curIndex) + separator + numString.slice(curIndex);\r\n            // numString = numString.insertAt(curIndex, separator);\r\n            curIndex -= 3;\r\n        }\r\n    }\r\n    else{\r\n        var units = Utility.units;\r\n        for(var i = 0, length = units.length; i < length; ++i){\r\n            if(numString.length > units[i].l){\r\n                var tmpNumArr = (number / units[i].div).toString().split('.');\r\n                var fixedLength = tmpNumArr[0].length > 2 ? 1 : 2;\r\n\r\n                // insert separator\r\n                if(tmpNumArr[0].length > 3){\r\n                    curIndex = tmpNumArr[0].length - 3;\r\n\r\n                    while(curIndex > 0){\r\n                        tmpNumArr[0] = tmpNumArr[0].insertAt(curIndex, separator);\r\n                        curIndex -= 3;\r\n                    }\r\n                }\r\n\r\n                numString = tmpNumArr[0];\r\n                // append fixed\r\n                if(tmpNumArr.length > 1){\r\n                    numString += '.' + tmpNumArr[1].substr(0, fixedLength);\r\n                }\r\n                numString += units[i].prefix;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    if(isNegative){\r\n        numString = \"-\" + numString;\r\n    }\r\n\r\n    //ZLog.debug(\"num String = %s\", numString);\r\n    return numString;\r\n};\r\n\r\nUtility.runUpdateGold = function(label,curGold,tarGold,funcFormat,cbInterval,cbDone,speratorFuncFormat,unitFuncFormat,prefix,postfix){\r\n    if(funcFormat === undefined) funcFormat = this.formatMoneyFull;\r\n    if(curGold === undefined) curGold = 0;\r\n    if(tarGold === undefined) tarGold = 0;\r\n    if(prefix === undefined) prefix = \"\";\r\n    if(postfix === undefined) postfix = \"\";\r\n\r\n    label.string = funcFormat(10000);\r\n    var numOfUpdate = 30;\r\n    var delay = 0.1;\r\n    var offset = (tarGold - curGold)/numOfUpdate;\r\n    label.node.runAction(cc.sequence(\r\n        cc.repeat(cc.sequence(\r\n            cc.delayTime(delay),\r\n            cc.callFunc(function (sender) {\r\n                curGold = Math.floor(curGold + offset);\r\n                // console.log(\"update new gold:\" + curGold);\r\n                label.string = prefix + funcFormat(curGold,unitFuncFormat,speratorFuncFormat) + postfix;\r\n                cbInterval && cbInterval(label,curGold);\r\n            })\r\n        ),numOfUpdate),\r\n        cc.callFunc(function (sender) {\r\n            label.string = prefix + funcFormat(tarGold,unitFuncFormat,speratorFuncFormat) + postfix;\r\n            // console.log(\"update tar gold:\" + tarGold);\r\n            cbDone && cbDone(label);\r\n        })\r\n    ));\r\n};\r\nmodule.exports = Utility;"]}