{"version":3,"sources":["assets\\scripts\\CTable.js"],"names":["require","Table","Card","CCard","cc","Class","Component","properties","lbPot","Label","lbId","lbStake","ctor","numCard","table","onLoad","string","pot","id","stake","console","error","start","setTable","getPositionCard","card","index","getPositionVia","num","y","startX","endX","maxOffsetX","offset","Vec2","setNumCard","number"],"mappings":";;;;;;eAAmBA,OAAO,CAAC,OAAD;IAArBC,iBAAAA;IAAMC,gBAAAA;;AACX,IAAIC,KAAK,GAAGH,OAAO,CAAC,OAAD,CAAnB;;AACAI,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACRC,IAAAA,KAAK,EAACJ,EAAE,CAACK,KADD;AAERC,IAAAA,IAAI,EAACN,EAAE,CAACK,KAFA;AAGRE,IAAAA,OAAO,EAACP,EAAE,CAACK;AAHH,GAHP;AAQLG,EAAAA,IAAI,EAAC,gBAAU;AACX,SAAKC,OAAL,GAAe,CAAf;AACA;;AACA,SAAKC,KAAL,GAAa,IAAb;AACH,GAZI;AAcL;AAEAC,EAAAA,MAhBK,oBAgBK;AACN,QAAG,KAAKD,KAAR,EAAc;AACV,WAAKN,KAAL,CAAWQ,MAAX,GAAoB,KAAKF,KAAL,CAAWG,GAA/B;AACA,WAAKP,IAAL,CAAUM,MAAV,GAAmB,KAAKF,KAAL,CAAWI,EAA9B;AACA,WAAKP,OAAL,CAAaK,MAAb,GAAsB,KAAKF,KAAL,CAAWK,KAAjC;AACH,KAJD,MAIK;AACDC,MAAAA,OAAO,CAACC,KAAR,CAAc,2BAAd;AACH;AACJ,GAxBI;AA0BLC,EAAAA,KA1BK,mBA0BI,CAAE,CA1BN;AA4BLC,EAAAA,QAAQ,EAAC,kBAAST,KAAT,EAAe;AACpB,SAAKA,KAAL,GAAaA,KAAb;AACH,GA9BI;;AA+BL;;;;AAIAU,EAAAA,eAAe,EAAC,yBAAUC,IAAV,EAAgB;AAC5B,QAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AACA,WAAO,KAAKC,cAAL,CAAoBD,KAApB,CAAP;AACH,GAtCI;AAuCLC,EAAAA,cAAc,EAAC,wBAASD,KAAT,EAAe;AAC1B,QAAIE,GAAG,GAAG,KAAKf,OAAL,GAAe,CAAf,GAAmB,KAAKA,OAAxB,GAAkC,CAA5C;AACA,QAAIgB,CAAC,GAAG,CAAR;AACA,QAAIC,MAAM,GAAG,CAAE,GAAf;AACA,QAAIC,IAAI,GAAG,GAAX;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,MAAM,GAAG,CAACF,IAAI,GAAGD,MAAR,KAAmBF,GAAG,GAAG,CAAzB,CAAb;AACA,QAAGK,MAAM,GAAGD,UAAZ,EAAwBC,MAAM,GAAGD,UAAT,CAPE,CAQ1B;;AACAF,IAAAA,MAAM,GAAGA,MAAM,GAAI,CAACC,IAAI,GAAGD,MAAP,GAAiBG,MAAM,IAAGL,GAAG,GAAG,CAAT,CAAxB,IAAsC,CAAzD;AACA,WAAO,IAAIxB,EAAE,CAAC8B,IAAP,CAAYJ,MAAM,GAAIG,MAAM,GAAGP,KAA/B,EAAuCG,CAAvC,CAAP;AACH,GAlDI;AAmDLM,EAAAA,UAAU,EAAC,oBAAUC,MAAV,EAAkB;AACzB,SAAKvB,OAAL,GAAeuB,MAAf;AACH,GArDI,CAsDL;;AAtDK,CAAT","sourceRoot":"/","sourcesContent":["var {Table,Card} = require(\"Types\");\r\nvar CCard = require(\"CCard\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        lbPot:cc.Label,\r\n        lbId:cc.Label,\r\n        lbStake:cc.Label\r\n    },\r\n    ctor:function(){\r\n        this.numCard = 0;\r\n        /** @type {Table}*/\r\n        this.table = null;\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        if(this.table){\r\n            this.lbPot.string = this.table.pot;\r\n            this.lbId.string = this.table.id;\r\n            this.lbStake.string = this.table.stake;\r\n        }else{\r\n            console.error(\"need setTable before load\");\r\n        }\r\n    },\r\n\r\n    start () {},\r\n\r\n    setTable:function(table){\r\n        this.table = table;\r\n    },\r\n    /**\r\n     *\r\n     * @param card {CCard}\r\n     */\r\n    getPositionCard:function (card) {\r\n        var index = card.index;\r\n        return this.getPositionVia(index);\r\n    },\r\n    getPositionVia:function(index){\r\n        var num = this.numCard > 0 ? this.numCard : 1;\r\n        var y = 0;\r\n        var startX = - 250;\r\n        var endX = 250;\r\n        var maxOffsetX = 50;\r\n        var offset = (endX - startX) / (num - 1);\r\n        if(offset > maxOffsetX) offset = maxOffsetX;\r\n        //re-call startX;\r\n        startX = startX +  (endX - startX - (offset *(num - 1)))/2;\r\n        return new cc.Vec2(startX + (offset * index), y);\r\n    },\r\n    setNumCard:function (number) {\r\n        this.numCard = number;\r\n    }\r\n    // update (dt) {},\r\n});\r\n"]}