{"version":3,"sources":["assets/scripts/CCoinEffect.js"],"names":["CoinEffect","require","cc","Class","Component","properties","running","collided","ctor","gravity","type","speedX","speedY","speedR","floorPosition","Vec2","onLoad","Const","GRAVITY","TYPE","RAIN","Math","random","RATE_SPEED_Y","RATE_SPEED_R","parent","node","getParent","x","width","y","height","RATE_Position_Y","setPosition","valueRan","MAX_SCALE","MIN_SCALE","setScale","angle","active","start","update","dt","curOpa","opacity","pos","getPosition","size","getContentSize","scale","abs","RATE_JUMP_BACK","animation","getComponent","Animation","stop"],"mappings":"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","sourceRoot":"/","sourcesContent":["var CoinEffect = require('CoinEffect');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        running:{\r\n            default:false,\r\n        },\r\n        collided:{\r\n            default:false,\r\n        }\r\n    },\r\n\r\n    ctor:function(){\r\n        this.gravity = 0;\r\n        this.type = 0;\r\n        this.speedX = 0;\r\n        this.speedY = 0;\r\n        this.speedR = 0;\r\n        this.floorPosition = cc.Vec2(0, 0);\r\n        this.running = false;\r\n        this.collided = false;\r\n    },\r\n    onLoad () {\r\n        //khoi tao ban dau\r\n        this.gravity = CoinEffect.Const.GRAVITY;\r\n        this.type = CoinEffect.Const.TYPE.RAIN;\r\n        this.speedX = 0;\r\n        this.speedY = Math.random() * CoinEffect.Const.RATE_SPEED_Y;\r\n        // this.speedR = Math.random() * CoinEffect.Const.RATE_SPEED_R;\r\n        this.speedR = CoinEffect.Const.RATE_SPEED_R;\r\n        var parent = this.node.getParent();\r\n        if(parent){\r\n            var x = Math.random() * parent.width;\r\n            var y = parent.height + this.node.height + Math.random() * CoinEffect.Const.RATE_Position_Y;\r\n            this.node.setPosition(x,y);\r\n        }else{\r\n            this.node.setPosition(0,0);\r\n        }\r\n\r\n        var valueRan = Math.random() * (CoinEffect.Const.MAX_SCALE - CoinEffect.Const.MIN_SCALE) + CoinEffect.Const.MIN_SCALE;\r\n        this.node.setScale(valueRan);\r\n        this.node.angle = -(Math.random() * 360);\r\n        this.node.active = false;\r\n        // this.active = false;\r\n        // this.node.setPosition(0,0);\r\n    },\r\n\r\n    start () {\r\n        // this.running = true;\r\n    },\r\n\r\n    update (dt) {\r\n        if(!this.running) return;\r\n\r\n        var curOpa = this.node.opacity;\r\n        var angle = this.node.angle;\r\n        var pos = this.node.getPosition();\r\n        var size = this.node.getContentSize();\r\n\r\n        curOpa += 1500*dt;\r\n        pos.x += this.speedX * dt;\r\n        pos.y += this.speedY * dt;\r\n        angle = angle + this.speedR * dt;\r\n\r\n        this.speedY -= this.gravity * dt;\r\n\r\n\r\n        var scale = this.node.scale;\r\n\r\n        // jump once after going to floorY\r\n        if (pos.y < this.floorPosition.y && !this.collided) {\r\n            if(this.speedY < 0) {\r\n                // force update posY to floorY\r\n                pos.y = this.floorPosition.y + (size.height * 0.5 * scale);\r\n\r\n                this.collided = true;\r\n                this.speedY = Math.abs(this.speedY) * (Math.random() * (CoinEffect.Const.RATE_JUMP_BACK-0.3) + 0.3);\r\n                this.speedX = 0.4 * this.speedX;\r\n            }\r\n        }\r\n        else if (pos.y - (size.height * 0.5 * scale) < this.floorPosition.y && this.collided) {\r\n            // force update posY to floorY\r\n            pos.y = this.floorPosition.y + (size.height * 0.5 * scale);\r\n\r\n            // stop if this is below floorY\r\n            var animation = this.getComponent(cc.Animation);\r\n            animation.stop();\r\n            this.running = false;\r\n        }\r\n        this.node.opacity = curOpa>255?255:curOpa;\r\n        this.node.angle = angle;\r\n        this.node.setPosition(pos);\r\n        // console.log(this.speedY + JSON.stringify(pos) + scale);\r\n    },\r\n});\r\n"]}