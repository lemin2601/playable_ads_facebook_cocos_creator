{"version":3,"sources":["assets\\scripts\\CCard.js"],"names":["require","Card","Rank","CCard","cc","Class","Component","properties","point","Label","suit","Sprite","mainPic","cardBG","redTextColor","Color","RED","blackTextColor","WHITE","texFrontBG","SpriteFrame","texBackBG","texFaces","type","texSuitBig","texSuitSmall","index","Integer","visible","isSelected","owner","Node","isDraging","card","setOwner","onLoad","console","log","init","node","on","EventType","TOUCH_START","onTouch","TOUCH_MOVE","TOUCH_END","TOUCH_CANCEL","onEmit","toString","event","customEvent","Event","EventCustom","setUserData","dispatchEvent","id","start","setCard","isFaceCard","spriteFrame","string","pointName","isRedSuit","color","reveal","isFaceUp","active"],"mappings":"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","sourceRoot":"/","sourcesContent":["var {Card,Rank} = require(\"Types\");\r\n// import {Card} from \"Types\";\r\n/**\r\n * @class CCard\r\n */\r\nvar CCard = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // nodes\r\n        point   : cc.Label,\r\n        suit   : cc.Sprite,\r\n        mainPic: cc.Sprite,\r\n        cardBG : cc.Sprite,\r\n\r\n        // resources\r\n        redTextColor  : cc.Color.RED,\r\n        blackTextColor: cc.Color.WHITE,\r\n        texFrontBG    : cc.SpriteFrame,\r\n        texBackBG     : cc.SpriteFrame,\r\n\r\n        texFaces    : {\r\n            default: [],\r\n            type   : cc.SpriteFrame\r\n        },\r\n        texSuitBig  : {\r\n            default: [],\r\n            type   : cc.SpriteFrame\r\n        },\r\n        texSuitSmall: {\r\n            default: [],\r\n            type   : cc.SpriteFrame\r\n        },\r\n        index       : {//vi tri trong group khi danh ra\r\n            default: 0,\r\n            type   : cc.Integer,\r\n            visible: false,\r\n        },\r\n        isSelected  : { // trang thai co select khong\r\n            default: false,\r\n            visible: false\r\n        },\r\n        owner       : {//so huu quan bai, myPlayer hoac dock duoi table\r\n            default: null,\r\n            type   : cc.Node,\r\n            visible: false\r\n        },\r\n        isDraging   : {\r\n            default: true,\r\n            visible: false\r\n        },\r\n\r\n        card: {\r\n            default: null,\r\n            type   : Card,\r\n            visible:false\r\n        }\r\n    },\r\n\r\n    /**\r\n     * my player | dock\r\n     * @param owner {cc.Node}\r\n     */\r\n    setOwner:function(owner){\r\n        this.owner = owner;\r\n    },\r\n    onLoad:function(){\r\n        console.log(\"loadCard:\" + this.card +\"|\" + this.index);\r\n        if(this.card){\r\n           this.init(this.card);\r\n        }\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouch, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouch, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouch, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouch, this);\r\n        // this.node.on(\"cardtouch\",this.onEmit,this);\r\n\r\n    },\r\n    onEmit:function(){\r\n        console.log(\"onEmit card:\" + this.card.toString());\r\n    },\r\n    onTouch:function(event){\r\n        if(this.owner){\r\n            var customEvent = new cc.Event.EventCustom('card-touch', true);\r\n            customEvent.setUserData({\r\n                card:this,\r\n                event:event\r\n            });\r\n            this.node.dispatchEvent(customEvent);\r\n            // var cPlayer = this.owner.getComponent(\"CPlayer\");\r\n            // cPlayer.onTouchCard(event,this);\r\n        }else{\r\n            console.log(\"not found owner's card:\" + this.id);\r\n        }\r\n    },\r\n    start:function(){\r\n        this.node.dispatchEvent( new cc.Event.EventCustom('cardtouch', true) );\r\n    },\r\n    setCard:function(card){\r\n        console.log(\"setCard:\" + card +\"|point:\" + card.point +\"|suit:\" + card.suit);\r\n        this.card = card;\r\n    },\r\n    // use this for initialization\r\n    init: function (card) {\r\n        var isFaceCard = 8<= card.point && card.point <= 10;\r\n\r\n        console.log(\"isFace:\" + card.toString() +\"|\" + isFaceCard);\r\n        if (isFaceCard) {\r\n            this.mainPic.spriteFrame = this.texFaces[card.point - 9];\r\n        } else {\r\n            this.mainPic.spriteFrame = this.texSuitBig[card.suit];\r\n        }\r\n\r\n        // for jsb\r\n        this.point.string = card.pointName;\r\n\r\n        if (card.isRedSuit) {\r\n            this.point.node.color = this.redTextColor;\r\n        } else {\r\n            this.point.node.color = this.blackTextColor;\r\n        }\r\n\r\n        this.suit.spriteFrame = this.texSuitSmall[card.suit];\r\n    },\r\n\r\n    reveal: function (isFaceUp) {\r\n        this.point.node.active   = isFaceUp;\r\n        this.suit.node.active    = isFaceUp;\r\n        this.mainPic.node.active = isFaceUp;\r\n        this.cardBG.spriteFrame  = isFaceUp ? this.texFrontBG : this.texBackBG;\r\n    },\r\n});"]}