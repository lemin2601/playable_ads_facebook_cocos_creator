{"version":3,"sources":["assets\\scripts\\CCard.js"],"names":["require","Card","Rank","CCard","cc","Class","Component","properties","point","Label","suit","Sprite","mainPic","cardBG","redTextColor","Color","RED","blackTextColor","WHITE","texFrontBG","SpriteFrame","texFaces","type","texAce","texSuitBig","texSuitSmall","layerSuggest","Node","index","Integer","visible","isSelected","owner","isDraging","card","setOwner","onLoad","active","init","node","on","EventType","TOUCH_START","onTouch","TOUCH_MOVE","TOUCH_END","TOUCH_CANCEL","onEmit","console","log","toString","event","customEvent","Event","EventCustom","setUserData","dispatchEvent","id","start","setCard","spriteFrame","isRedSuit","color","string","pointName","isAce","isFace","setPositionCenter","pos","setPosition","x","y","setSuggest","b"],"mappings":";;;;;;eAAkBA,OAAO,CAAC,OAAD;IAApBC,gBAAAA;IAAKC,gBAAAA,MACV;;AACA;;;;;AAGA,IAAIC,KAAK,GAAGC,EAAE,CAACC,KAAH,CAAS;AACjB,aAASD,EAAE,CAACE,SADK;AAGjBC,EAAAA,UAAU,EAAE;AACR;AACAC,IAAAA,KAAK,EAAKJ,EAAE,CAACK,KAFL;AAGRC,IAAAA,IAAI,EAAKN,EAAE,CAACO,MAHJ;AAIRC,IAAAA,OAAO,EAAER,EAAE,CAACO,MAJJ;AAKRE,IAAAA,MAAM,EAAGT,EAAE,CAACO,MALJ;AAOR;AACAG,IAAAA,YAAY,EAAIV,EAAE,CAACW,KAAH,CAASC,GARjB;AASRC,IAAAA,cAAc,EAAEb,EAAE,CAACW,KAAH,CAASG,KATjB;AAURC,IAAAA,UAAU,EAAMf,EAAE,CAACgB,WAVX;AAWR;AACAC,IAAAA,QAAQ,EAAM;AAAC;AACX,iBAAS,EADC;AAEVC,MAAAA,IAAI,EAAKlB,EAAE,CAACgB;AAFF,KAZN;AAgBRG,IAAAA,MAAM,EAAC;AACH,iBAAQ,EADL;AAEHD,MAAAA,IAAI,EAAClB,EAAE,CAACgB;AAFL,KAhBC;AAoBRI,IAAAA,UAAU,EAAI;AACV,iBAAS,EADC;AAEVF,MAAAA,IAAI,EAAKlB,EAAE,CAACgB;AAFF,KApBN;AAwBRK,IAAAA,YAAY,EAAE;AACV,iBAAS,EADC;AAEVH,MAAAA,IAAI,EAAKlB,EAAE,CAACgB;AAFF,KAxBN;AA4BRM,IAAAA,YAAY,EAAC;AACT,iBAAQ,IADC;AAETJ,MAAAA,IAAI,EAAClB,EAAE,CAACuB;AAFC,KA5BL;AAgCRC,IAAAA,KAAK,EAAS;AAAC;AACX,iBAAS,CADC;AAEVN,MAAAA,IAAI,EAAKlB,EAAE,CAACyB,OAFF;AAGVC,MAAAA,OAAO,EAAE;AAHC,KAhCN;AAqCRC,IAAAA,UAAU,EAAI;AAAE;AACZ,iBAAS,KADC;AAEVD,MAAAA,OAAO,EAAE;AAFC,KArCN;AAyCRE,IAAAA,KAAK,EAAS;AAAC;AACX,iBAAS,IADC;AAEVV,MAAAA,IAAI,EAAKlB,EAAE,CAACuB,IAFF;AAGVG,MAAAA,OAAO,EAAE;AAHC,KAzCN;AA8CRG,IAAAA,SAAS,EAAK;AACV,iBAAS,IADC;AAEVH,MAAAA,OAAO,EAAE;AAFC,KA9CN;AAkDRI,IAAAA,IAAI,EAAE;AACF,iBAAS,IADP;AAEFZ,MAAAA,IAAI,EAAKrB,IAFP;AAGF6B,MAAAA,OAAO,EAAC;AAHN;AAlDE,GAHK;;AA4DjB;;;;AAIAK,EAAAA,QAAQ,EAAC,kBAASH,KAAT,EAAe;AACpB,SAAKA,KAAL,GAAaA,KAAb;AACH,GAlEgB;AAmEjBI,EAAAA,MAAM,EAAC,kBAAU;AACb,SAAKV,YAAL,CAAkBW,MAAlB,GAA2B,KAA3B,CADa,CAEb;;AACA,QAAG,KAAKH,IAAR,EAAa;AACV,WAAKI,IAAL,CAAU,KAAKJ,IAAf;AACF;;AACD,SAAKK,IAAL,CAAUC,EAAV,CAAapC,EAAE,CAACuB,IAAH,CAAQc,SAAR,CAAkBC,WAA/B,EAA4C,KAAKC,OAAjD,EAA0D,IAA1D;AACA,SAAKJ,IAAL,CAAUC,EAAV,CAAapC,EAAE,CAACuB,IAAH,CAAQc,SAAR,CAAkBG,UAA/B,EAA2C,KAAKD,OAAhD,EAAyD,IAAzD;AACA,SAAKJ,IAAL,CAAUC,EAAV,CAAapC,EAAE,CAACuB,IAAH,CAAQc,SAAR,CAAkBI,SAA/B,EAA0C,KAAKF,OAA/C,EAAwD,IAAxD;AACA,SAAKJ,IAAL,CAAUC,EAAV,CAAapC,EAAE,CAACuB,IAAH,CAAQc,SAAR,CAAkBK,YAA/B,EAA6C,KAAKH,OAAlD,EAA2D,IAA3D,EATa,CAUb;AAEH,GA/EgB;AAgFjBI,EAAAA,MAAM,EAAC,kBAAU;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiB,KAAKf,IAAL,CAAUgB,QAAV,EAA7B;AACH,GAlFgB;AAmFjBP,EAAAA,OAAO,EAAC,iBAASQ,KAAT,EAAe;AACnB,QAAG,KAAKnB,KAAR,EAAc;AACV,UAAIoB,WAAW,GAAG,IAAIhD,EAAE,CAACiD,KAAH,CAASC,WAAb,CAAyB,YAAzB,EAAuC,IAAvC,CAAlB;AACAF,MAAAA,WAAW,CAACG,WAAZ,CAAwB;AACpBrB,QAAAA,IAAI,EAAC,IADe;AAEpBiB,QAAAA,KAAK,EAACA;AAFc,OAAxB;AAIA,WAAKZ,IAAL,CAAUiB,aAAV,CAAwBJ,WAAxB,EANU,CAOV;AACA;AACH,KATD,MASK;AACDJ,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4B,KAAKQ,EAA7C;AACH;AACJ,GAhGgB;AAiGjBC,EAAAA,KAAK,EAAC,iBAAU;AACZ,SAAKnB,IAAL,CAAUiB,aAAV,CAAyB,IAAIpD,EAAE,CAACiD,KAAH,CAASC,WAAb,CAAyB,WAAzB,EAAsC,IAAtC,CAAzB;AACH,GAnGgB;AAoGjBK,EAAAA,OAAO,EAAC,iBAASzB,IAAT,EAAc;AAClB;AACA,SAAKA,IAAL,GAAYA,IAAZ;AACH,GAvGgB;AAwGjB;AACAI,EAAAA,IAAI,EAAE,cAAUJ,IAAV,EAAgB;AAClB;AACA,SAAKxB,IAAL,CAAUkD,WAAV,GAAwB,KAAKnC,YAAL,CAAkBS,IAAI,CAACxB,IAAvB,CAAxB,CAFkB,CAIlB;;AACA,QAAIwB,IAAI,CAAC2B,SAAT,EAAoB;AAChB,WAAKrD,KAAL,CAAW+B,IAAX,CAAgBuB,KAAhB,GAAwB,KAAKhD,YAA7B;AACH,KAFD,MAEO;AACH,WAAKN,KAAL,CAAW+B,IAAX,CAAgBuB,KAAhB,GAAwB,KAAK7C,cAA7B;AACH;;AACD,SAAKT,KAAL,CAAWuD,MAAX,GAAoB7B,IAAI,CAAC8B,SAAzB,CAVkB,CAYlB;;AACA,QAAG9B,IAAI,CAAC+B,KAAR,EAAc;AACV,WAAKrD,OAAL,CAAagD,WAAb,GAA2B,KAAKrC,MAAL,CAAYW,IAAI,CAACxB,IAAjB,CAA3B;AACH,KAFD,MAEM,IAAGwB,IAAI,CAACgC,MAAR,EAAe;AACjB,WAAKtD,OAAL,CAAagD,WAAb,GAA2B,KAAKvC,QAAL,CAAca,IAAI,CAAC1B,KAAL,GAAa,CAA3B,CAA3B;;AACA,UAAI0B,IAAI,CAAC2B,SAAT,EAAoB;AAChB,aAAKjD,OAAL,CAAa2B,IAAb,CAAkBuB,KAAlB,GAA0B,KAAKhD,YAA/B;AACH,OAFD,MAEO;AACH,aAAKF,OAAL,CAAa2B,IAAb,CAAkBuB,KAAlB,GAA0B1D,EAAE,CAACW,KAAH,CAASG,KAAnC;AACH;AACJ,KAPK,MAOD;AACD;AACA,WAAKN,OAAL,CAAagD,WAAb,GAA2B,KAAKpC,UAAL,CAAgBU,IAAI,CAACxB,IAArB,CAA3B;AACH;AACJ,GAnIgB;AAqIjByD,EAAAA,iBAAiB,EAAC,2BAAUC,GAAV,EAAe;AAC7B,SAAK7B,IAAL,CAAU8B,WAAV,CAAsBD,GAAG,CAACE,CAAJ,GAAQ,EAA9B,EAAiCF,GAAG,CAACG,CAAJ,GAAQ,EAAzC;AACH,GAvIgB;AAwIjBC,EAAAA,UAAU,EAAC,oBAAUC,CAAV,EAAa;AACpB,SAAK/C,YAAL,CAAkBW,MAAlB,GAA2B,CAACoC,CAA5B;AACH;AA1IgB,CAAT,CAAZ","sourceRoot":"/","sourcesContent":["var {Card,Rank} = require(\"Types\");\r\n// import {Card} from \"Types\";\r\n/**\r\n * @class CCard\r\n */\r\nvar CCard = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // nodes\r\n        point   : cc.Label,\r\n        suit   : cc.Sprite,\r\n        mainPic: cc.Sprite,\r\n        cardBG : cc.Sprite,\r\n\r\n        // resources\r\n        redTextColor  : cc.Color.RED,\r\n        blackTextColor: cc.Color.WHITE,\r\n        texFrontBG    : cc.SpriteFrame,\r\n        // texBackBG     : cc.SpriteFrame,\r\n        texFaces    : {//J,Q,K\r\n            default: [],\r\n            type   : cc.SpriteFrame\r\n        },\r\n        texAce:{\r\n            default:[],\r\n            type:cc.SpriteFrame\r\n        },\r\n        texSuitBig  : {\r\n            default: [],\r\n            type   : cc.SpriteFrame\r\n        },\r\n        texSuitSmall: {\r\n            default: [],\r\n            type   : cc.SpriteFrame\r\n        },\r\n        layerSuggest:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        index       : {//vi tri trong group khi danh ra\r\n            default: 0,\r\n            type   : cc.Integer,\r\n            visible: false\r\n        },\r\n        isSelected  : { // trang thai co select khong\r\n            default: false,\r\n            visible: false\r\n        },\r\n        owner       : {//so huu quan bai, myPlayer hoac dock duoi table\r\n            default: null,\r\n            type   : cc.Node,\r\n            visible: false\r\n        },\r\n        isDraging   : {\r\n            default: true,\r\n            visible: false\r\n        },\r\n        card: {\r\n            default: null,\r\n            type   : Card,\r\n            visible:false\r\n        }\r\n    },\r\n\r\n    /**\r\n     * my player | dock\r\n     * @param owner {cc.Node}\r\n     */\r\n    setOwner:function(owner){\r\n        this.owner = owner;\r\n    },\r\n    onLoad:function(){\r\n        this.layerSuggest.active = false;\r\n        // console.log(\"loadCard:\" + this.card +\"|\" + this.index);\r\n        if(this.card){\r\n           this.init(this.card);\r\n        }\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouch, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouch, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouch, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouch, this);\r\n        // this.node.on(\"cardtouch\",this.onEmit,this);\r\n\r\n    },\r\n    onEmit:function(){\r\n        console.log(\"onEmit card:\" + this.card.toString());\r\n    },\r\n    onTouch:function(event){\r\n        if(this.owner){\r\n            var customEvent = new cc.Event.EventCustom('card-touch', true);\r\n            customEvent.setUserData({\r\n                card:this,\r\n                event:event\r\n            });\r\n            this.node.dispatchEvent(customEvent);\r\n            // var cPlayer = this.owner.getComponent(\"CPlayer\");\r\n            // cPlayer.onTouchCard(event,this);\r\n        }else{\r\n            console.log(\"not found owner's card:\" + this.id);\r\n        }\r\n    },\r\n    start:function(){\r\n        this.node.dispatchEvent( new cc.Event.EventCustom('cardtouch', true) );\r\n    },\r\n    setCard:function(card){\r\n        // console.log(\"setCard:\" + card +\"|point:\" + card.point +\"|suit:\" + card.suit);\r\n        this.card = card;\r\n    },\r\n    // use this for initialization\r\n    init: function (card) {\r\n        //chat\r\n        this.suit.spriteFrame = this.texSuitSmall[card.suit];\r\n\r\n        //so\r\n        if (card.isRedSuit) {\r\n            this.point.node.color = this.redTextColor;\r\n        } else {\r\n            this.point.node.color = this.blackTextColor;\r\n        }\r\n        this.point.string = card.pointName;\r\n\r\n        //hinh\r\n        if(card.isAce){\r\n            this.mainPic.spriteFrame = this.texAce[card.suit];\r\n        }else if(card.isFace){\r\n            this.mainPic.spriteFrame = this.texFaces[card.point - 8];\r\n            if (card.isRedSuit) {\r\n                this.mainPic.node.color = this.redTextColor;\r\n            } else {\r\n                this.mainPic.node.color = cc.Color.WHITE;\r\n            }\r\n        }else{\r\n            //binh thuong 2->10\r\n            this.mainPic.spriteFrame = this.texSuitBig[card.suit];\r\n        }\r\n    },\r\n\r\n    setPositionCenter:function (pos) {\r\n        this.node.setPosition(pos.x - 50,pos.y - 65);\r\n    },\r\n    setSuggest:function (b) {\r\n        this.layerSuggest.active = !b;\r\n    }\r\n});"]}