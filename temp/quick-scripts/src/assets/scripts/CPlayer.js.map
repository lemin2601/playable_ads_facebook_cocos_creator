{"version":3,"sources":["assets\\scripts\\CPlayer.js"],"names":["Types","require","Utility","CPlayer","cc","Class","Component","properties","avatar","Node","displayName","Label","gold","spriteAvatar","type","SpriteFrame","layerCard","imgPass","ctor","player","gameController","cards","onLoad","string","name","formatMoneyFull","circleAvatar","getComponent","changeAvatar","_loadCards","console","error","active","node","on","onTouchCard","start","setGameController","setPlayer","updateUI","i","length","c","cardPrefab","getNewCard","cCard","setCard","index","setOwner","p","getPositionCard","r","getRotationCard","setPosition","angle","addChild","push","setLayerCard","onDiscard","cardPrefabs","isContain","id","len","card","unshift","splice","_updatePosCards","k","setPositionCenter","getPosition","log","getNumCard","getRotationVia","num","y","startX","endX","maxOffsetX","offset","getPositionVia","getCirclePos","Vec2","pos","x","onPass","runAction","sequence","delayTime","callFunc","bind","event","owner","EventType","TOUCH_START","TOUCH_MOVE","isDraging","getParent","convertToNodeSpaceAR","getLocation","TOUCH_END","isSelected","TOUCH_CANCEL","onEnterTurn","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var Types = require(\"Types\");\r\nvar Utility = require(\"Utility\");\r\n\r\nvar CPlayer = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        avatar:cc.Node,\r\n        displayName:cc.Label,\r\n        gold:cc.Label,\r\n        spriteAvatar:{\r\n            default:[],\r\n            type:[cc.SpriteFrame]\r\n        },\r\n        layerCard:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        imgPass:{\r\n            default:null,\r\n            type:cc.Node\r\n        }\r\n    },\r\n    ctor:function(){\r\n        /** @type {Player}*/\r\n        this.player = null;\r\n        /** @type {GameController}*/\r\n        this.gameController = null;\r\n        this.cards = [];\r\n    },\r\n    onLoad:function(){\r\n        if(this.player){\r\n            this.displayName.string = this.player.name;\r\n            this.gold.string = Utility.formatMoneyFull(this.player.gold);\r\n\r\n            var circleAvatar = this.avatar.getComponent(\"CCircleAvatar\");\r\n            circleAvatar.changeAvatar(this.spriteAvatar[this.player.avatar]);\r\n\r\n            //loadCards\r\n            this._loadCards();\r\n        }else{\r\n            console.error(\"need load setPlayer info onLoad\");\r\n        }\r\n        if(this.imgPass){\r\n            this.imgPass.active = false;\r\n        }\r\n        this.node.on(\"card-touch\",this.onTouchCard,this);\r\n    },\r\n    start:function () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n\r\n    setGameController:function(gameController){\r\n        this.gameController = gameController;\r\n    },\r\n    setPlayer:function (player) {\r\n        this.player = player;\r\n    },\r\n    updateUI:function () {\r\n\r\n    },\r\n    _loadCards:function () {\r\n        if(this.gameController){\r\n            var cards = this.player.cards;\r\n            for (var i = 0; i < cards.length; i++) {\r\n                var c = cards[i];\r\n                var cardPrefab = this.gameController.getNewCard();\r\n                var cCard = cardPrefab.getComponent(\"CCard\");\r\n\r\n                cCard.setCard(c);\r\n                cCard.index = (i);\r\n                cCard.setOwner(this);\r\n\r\n                var p = this.getPositionCard(cCard);\r\n                var r = this.getRotationCard(cCard);\r\n                cardPrefab.setPosition(p);\r\n                cardPrefab.angle = (-r);\r\n                this.layerCard.addChild(cardPrefab);\r\n                this.cards.push(cardPrefab);\r\n            }\r\n        }else{\r\n            console.error(\"don't have GameControler in Player, so can't create newCard\");\r\n        }\r\n    },\r\n    setLayerCard:function(layerCard){\r\n        this.layerCard = layerCard;\r\n    },\r\n    onDiscard:function(cards){\r\n        if(this.layerCard == null){\r\n            console.error(\"you need add layerCard to player beforeDiscard\");\r\n            return [];\r\n        }\r\n        var cardPrefabs = [];\r\n        if(this.player && this.player.index === 0){\r\n            var isContain = function (c) {\r\n                for (var i = 0; i < cards.length; i++) {\r\n                    if(c.id=== cards[i].id){\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n            var len = this.cards.length;\r\n            for (var i = len - 1; i >= 0; i--) {\r\n                var cardPrefab = this.cards[i];\r\n                var cCard = cardPrefab.getComponent(\"CCard\");\r\n                if(isContain(cCard.card)){\r\n                    cardPrefabs.unshift(cardPrefab);\r\n                    this.cards.splice(i,1);\r\n                    this.player.cards.splice(i,1);\r\n                }\r\n            }\r\n            this._updatePosCards();\r\n        }else{\r\n            for (var k = 0; k < cards.length; k++) {\r\n                var cardPrefab = this.gameController.getNewCard();\r\n                var cCard = cardPrefab.getComponent(\"CCard\");\r\n                cCard.setCard(cards[k]);\r\n                cardPrefab.angle = 0;\r\n                cCard.setPositionCenter(this.node.getPosition());\r\n                cardPrefabs.push(cardPrefab);\r\n                this.layerCard.addChild(cardPrefab);\r\n            }\r\n        }\r\n        return cardPrefabs;\r\n    },\r\n    _updatePosCards:function(){\r\n        console.log(\"_updatePosCards\");\r\n        if(this.gameController){\r\n            var cards = this.cards;\r\n            for (var i = 0; i < cards.length; i++) {\r\n                var cardPrefab = cards[i];\r\n                var cCard = cardPrefab.getComponent(\"CCard\");\r\n\r\n                cCard.index = (i);\r\n\r\n                var p = this.getPositionCard(cCard);\r\n                var r = this.getRotationCard(cCard);\r\n                cardPrefab.setPosition(p);\r\n                cardPrefab.angle = (-r);\r\n            }\r\n        }else{\r\n            console.error(\"don't have GameControler in Player, so can't create newCard\");\r\n        }\r\n    },\r\n\r\n    getNumCard:function(){\r\n        if(this.player){\r\n            return this.player.cards.length;\r\n        }\r\n        return 1;\r\n    },\r\n    getRotationCard:function (cCard) {\r\n        var index = cCard.index;\r\n        return this.getRotationVia(index);\r\n    },\r\n\r\n    getRotationVia:function(index){\r\n        var num = this.getNumCard();\r\n        var y = 0;\r\n        var startX = -60;\r\n        var endX = 48;\r\n        var maxOffsetX = 12;\r\n        var offset = (endX - startX) / (num - 1);\r\n        if(offset > maxOffsetX) offset = maxOffsetX;\r\n        //re-call startX;\r\n        startX = startX +  (endX - startX - (offset *(num - 1)))/2;\r\n        return startX + (offset * index);\r\n    },\r\n    /**\r\n     *\r\n     * @param cCard {CCard}\r\n     */\r\n    getPositionCard:function (cCard){\r\n        var index = cCard.index;\r\n        return this.getPositionVia(index);\r\n    },\r\n    getPositionVia:function(index){\r\n        var num = this.getNumCard();\r\n        var y = 0;\r\n        var startX = - 250;\r\n        var endX = 250;\r\n        var maxOffsetX = 5;\r\n        var offset = (endX - startX) / (num - 1);\r\n        if(offset > maxOffsetX) offset = maxOffsetX;\r\n        //re-call startX;\r\n        startX = startX +  (endX - startX - (offset *(num - 1)))/2;\r\n        return this.getCirclePos(new cc.Vec2(startX + (offset * index), y));\r\n    },\r\n    /**\r\n     *\r\n     * @param pos {cc.Vec2}\r\n     */\r\n    getCirclePos:function (pos) {\r\n        var x = pos.x;\r\n        pos.y = (-1/250*(x*x) - 450 + 120);\r\n        return pos;\r\n    },\r\n    onPass:function () {\r\n        if(this.imgPass){\r\n            this.imgPass.active = true;\r\n            this.node.runAction(cc.sequence(\r\n                cc.delayTime(2),\r\n                cc.callFunc(function () {\r\n                    this.imgPass.active = false;\r\n                }.bind(this))\r\n            ))\r\n        }\r\n    },\r\n    /**\r\n     *\r\n     * @param event {cc.EventTouch}\r\n     * @param card {Card}\r\n     */\r\n    onTouchCard:function (event,card,owner) {\r\n        switch (event.type) {\r\n            case cc.Node.EventType.TOUCH_START:\r\n                break;\r\n            case cc.Node.EventType.TOUCH_MOVE:\r\n                card.isDraging = true;\r\n                var pos = card.node.getParent().convertToNodeSpaceAR(event.getLocation());\r\n                card.node.setPosition(pos);\r\n                break;\r\n            case cc.Node.EventType.TOUCH_END:\r\n                card.isDraging = false;\r\n                card.isSelected = !card.isSelected;\r\n                card.node.setPosition(this.getPositionCard(card));\r\n                break;\r\n            case cc.Node.EventType.TOUCH_CANCEL:\r\n                card.isDraging = false;\r\n                card.node.setPosition(this.getPositionCard(card));\r\n                break;\r\n        }\r\n    },\r\n    onEnterTurn:function () {\r\n        if(this.player.index === 0) return;\r\n\r\n    }\r\n});\r\nmodule.exports = CPlayer;\r\n"]}