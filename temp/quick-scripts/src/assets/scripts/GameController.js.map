{"version":3,"sources":["assets/scripts/GameController.js"],"names":["PlayableState","require","PoolHandler","CCard","CTable","CPlayer","Card","Table","Player","ActionType","GameFake","SoundType","CardGroup","PlayableAds","CAudio","Utility","cc","Class","Component","properties","playableState","type","serializable","visible","btnPlayNow","Button","btnDump","btnPass","layerGame","Node","layerAction","table","players","layerCard","nodeSuggestGesture","nodeCHPlay","effectWin","effectCardGroup","cardPrefab","Prefab","imgHands","Sprite","emoPlayers","imgHighLight","_poolCard","NodePool","_gameFake","ctor","curIndex","cardExpects","startPointTouch","zIndexCard","audio","_posHands","onLoad","i","length","push","node","getPosition","active","getComponent","gameController","attachLayerCardToPlayer","gameInfo","getDefaultInfo","tableConfig","id","stake","pot","setTable","cards","dock","cTable","setNumCard","j","c","cardPrefabs","get","instantiate","cCard","setCard","index","setOwner","p","getPositionCard","angle","Math","random","setPosition","addChild","playersConfig","k","playerConfig","player","displayName","gold","avatarIndex","console","log","cPlayer","setGameController","setPlayer","on","onTouchCard","actionConfig","getAction","delayTime","time","onEnterTurn","scheduleOnce","executeAction","bind","_playEmo","emo","spine","setCompleteListener","trackEntry","setTimeout","setAnimation","_playEffectGroup","name","clearTracks","start","onEnable","len","setLayerCard","autoShowSuggest","unschedule","JSON","stringify","PASS","onPassAt","DISCARD","onDiscardAt","group","sound","playAudio","Array","isEnded","hand","runAction","moveBy","WIN","next","actionNext","playSoundYourTurn","suggest","onSuggestCard","onPass","groupType","onDiscard","effectDiscard","numCard","duration","duration1","setRotation","sequence","spawn","moveTo","rotateTo","scaleTo","x","y","zIndex","opacity","hide","show","fadeIn","fadeOut","callFunc","sender","owner","FLUSH","STRAIGHT","FULL_HOUSE","FOUR_OF_KIND","NONE","event","data","getUserData","card","isMyTurn","isTouchExpectCards","EventType","TOUCH_START","getLocation","TOUCH_MOVE","TOUCH_END","TOUCH_CANCEL","pos","onPlayNow","onCTAClick","onTouchDump","onTouchPass","getNewCard","showNodeCHPlay"],"mappings":"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","sourceRoot":"/","sourcesContent":["var PlayableState = require('PlayableState');\r\nvar PoolHandler = require(\"PoolHandler\");\r\nvar CCard = require(\"CCard\");\r\nvar CTable = require(\"CTable\");\r\nvar CPlayer = require(\"CPlayer\");\r\nvar {Card,Table,Player} = require(\"Types\");\r\nvar {ActionType,GameFake,SoundType,CardGroup} = require(\"GameFake\");\r\nvar PlayableAds = require(\"PlayableAds\");\r\nvar CAudio = require(\"CAudio\");\r\nvar Utility = require(\"Utility\");\r\n\r\ncc.Class({\r\n    extends   : cc.Component,\r\n    properties: {\r\n        playableState: {\r\n            default     : null,\r\n            type        : PlayableState,\r\n            serializable: false,\r\n            visible     : false\r\n        },\r\n        btnPlayNow   : cc.Button,\r\n        btnDump      : cc.Button,\r\n        btnPass      : cc.Button,\r\n        layerGame    : cc.Node,\r\n        layerAction  : cc.Node,\r\n        table:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        players  : {\r\n            default: [],\r\n            type   : cc.Node\r\n        },\r\n        layerCard:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        nodeSuggestGesture:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        nodeCHPlay:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        effectWin:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        effectCardGroup:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        cardPrefab: {\r\n            default: null,\r\n            type   : cc.Prefab\r\n        },\r\n        imgHands:{\r\n            default:[],\r\n            type:[cc.Sprite]\r\n        },\r\n        emoPlayers:{\r\n            default:[],\r\n            type:[cc.Node]\r\n        },\r\n        imgHighLight:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        _poolCard: {\r\n            default: null,\r\n            type   : cc.NodePool,\r\n            visible:false\r\n        },\r\n        _gameFake:{\r\n            default:null,\r\n            type: GameFake,\r\n            visible:false\r\n        },\r\n    },\r\n\r\n    ctor: function () {\r\n        this.curIndex = -1;\r\n        this.cardExpects = [];\r\n        this.startPointTouch = null;\r\n        this.zIndexCard = 10;\r\n        this.audio = null;\r\n        this._posHands = [];\r\n    },\r\n    onLoad: function () {\r\n        for (var i = 0; i < this.imgHands.length; i++) {\r\n            this._posHands.push(this.imgHands[i].node.getPosition());\r\n        }\r\n        this.nodeCHPlay.active = false;\r\n        this.imgHighLight.active = false;\r\n        this.effectCardGroup.active = false;\r\n        this.effectWin.getComponent(\"CEffectWin\").gameController = this;\r\n        this.nodeSuggestGesture.active = false;\r\n        this.attachLayerCardToPlayer();\r\n        this.audio = this.node.getComponent(CAudio);\r\n        this.effectWin.active = false;\r\n        //1. khoi tao info ban dau\r\n        this._poolCard = new cc.NodePool(CCard);\r\n        this._gameFake = new GameFake();\r\n        var gameInfo = this._gameFake.getDefaultInfo();\r\n        var tableConfig = gameInfo.table;\r\n        var table = new Table(tableConfig.id,tableConfig.stake,tableConfig.pot);\r\n        this.table.getComponent(CTable).setTable(table);\r\n\r\n        //create new Card on Dock\r\n        var cards = tableConfig.dock;\r\n        var cTable = this.table.getComponent(CTable);\r\n        cTable.setNumCard(cards.length);\r\n        for (var j = 0; j < cards.length; j++) {\r\n            var c = cards[j];\r\n\r\n            var cardPrefabs = this._poolCard.get();\r\n            if(!cardPrefabs){cardPrefabs = cc.instantiate(this.cardPrefab);}\r\n\r\n            var cCard = cardPrefabs.getComponent(CCard);\r\n\r\n            cCard.setCard(c);\r\n            cCard.index = (j);\r\n            cCard.setOwner(cTable);\r\n\r\n            var p = cTable.getPositionCard(cCard);\r\n            cCard.node.angle = (Math.random() - 0.5) * 40;\r\n            cardPrefabs.setPosition(p);\r\n            this.layerCard.addChild(cardPrefabs);\r\n        }\r\n        // cc.log(\"onEnable players:\" + this.players.length);\r\n\r\n        //update info avatar + load card\r\n        var playersConfig = gameInfo.players;\r\n        for (var k = 0; k < playersConfig.length; k++) {\r\n            var playerConfig = playersConfig[k];\r\n            var player = new Player(playerConfig.index,playerConfig.displayName,playerConfig.gold,playerConfig.avatarIndex,playerConfig.cards);\r\n            console.log(\"get palyer at:\" + player.index);\r\n            var cPlayer = this.players[player.index].getComponent(CPlayer);\r\n            cPlayer.setGameController(this);\r\n            cPlayer.setPlayer(player);\r\n        }\r\n        //load prefab cardPrefabs\r\n        // cc.loader.loadRes(\"prefabs/cardPrefab\", function (err, prefab) {\r\n        //     var newNode = cc.instantiate(prefab);\r\n        //     newNode.setPosition(100,100);\r\n        //     this.layerGame.addChild(newNode);\r\n        //     // cc.director.getScene().addChild(newNode);\r\n        // }.bind(this));\r\n        this.node.on(\"card-touch\",this.onTouchCard,this);\r\n\r\n        var actionConfig = this._gameFake.getAction();\r\n        var delayTime = actionConfig.time;\r\n        this.curIndex = actionConfig.index;\r\n        this.onEnterTurn(actionConfig.index);\r\n        if(delayTime>0){\r\n            this.scheduleOnce(function () {\r\n                this.executeAction();\r\n            }.bind(this),delayTime);\r\n        }\r\n        // this._playEmo(5);\r\n        //\r\n        // setTimeout(function () {\r\n        //     this._playEmo(4);\r\n        // }.bind(this),2000);\r\n    },\r\n    _playEmo:function(index){\r\n        console.log(\"play emo:\" + index);\r\n        var emo = this.emoPlayers[index];\r\n        if(emo){\r\n            var spine = emo.getComponent('sp.Skeleton');\r\n            // spine.setStartListener(function(trackEntry){\r\n            //     var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            //     cc.log(\"[track %s][animation %s] start.\", trackEntry.trackIndex, animationName);\r\n            // });\r\n            // spine.setInterruptListener(function (trackEntry){\r\n            //     var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            //     cc.log(\"[track %s][animation %s] interrupt.\", trackEntry.trackIndex, animationName);\r\n            // });\r\n            // spine.setEndListener(function (trackEntry){\r\n            //     var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            //     cc.log(\"[track %s][animation %s] end.\", trackEntry.trackIndex, animationName);\r\n            // });\r\n            // spine.setDisposeListener(function (trackEntry){\r\n            //     var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            //     cc.log(\"[track %s][animation %s] will be disposed.\", trackEntry.trackIndex, animationName);\r\n            // });\r\n            spine.setCompleteListener(function(trackEntry){\r\n                emo.active = false;\r\n                // var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n                // // if (animationName === 'shoot') {\r\n                // //     this.spine.clearTrack(1);\r\n                // // }\r\n                // var loopCount = Math.floor(trackEntry.trackTime / trackEntry.animationEnd);\r\n                // cc.log(\"[track %s][animation %s] complete: %s\", trackEntry.trackIndex, animationName, loopCount);\r\n            });\r\n            // spine.setEventListener(function(trackEntry, event){\r\n            //     var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            //     cc.log(\"[track %s][animation %s] event: %s, %s, %s, %s\", trackEntry.trackIndex, animationName, event.data.name, event.intValue, event.floatValue, event.stringValue);\r\n            // });\r\n            setTimeout(function () {\r\n                emo.active = true;\r\n                spine.setAnimation(0, 'animation', false);\r\n            },1000);\r\n        }\r\n    },\r\n    _playEffectGroup:function(name){\r\n        console.log(\"_playEffectGroup:\" + name);\r\n        var emo = this.effectCardGroup;\r\n        if(emo){\r\n            var spine = emo.getComponent('sp.Skeleton');\r\n            spine.setCompleteListener(function(trackEntry){\r\n                spine.clearTracks();\r\n                emo.active = false;\r\n\r\n                // var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n                // // if (animationName === 'shoot') {\r\n                // //     this.spine.clearTrack(1);\r\n                // // }\r\n                // var loopCount = Math.floor(trackEntry.trackTime / trackEntry.animationEnd);\r\n                // cc.log(\"[track %s][animation %s] complete: %s\", trackEntry.trackIndex, animationName, loopCount);\r\n            });\r\n            setTimeout(function () {\r\n                emo.active = true;\r\n                spine.setAnimation(0, name, false);\r\n            },500);\r\n        }\r\n    },\r\n    start:function(){\r\n        // setTimeout(function () {\r\n        //     this.effectWin.active = true;\r\n        // }.bind(this),2000);\r\n    },\r\n    onEnable:function(){\r\n        console.log(\"onEnable players:\" + this.players.length);\r\n    },\r\n\r\n    attachLayerCardToPlayer:function(){\r\n        var len = this.players.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var cPlayer = this.players[i].getComponent(\"CPlayer\");\r\n            cPlayer.setLayerCard(this.layerCard);\r\n        }\r\n    },\r\n    onEnterTurn:function(index){\r\n        console.log(\"onEnterTurn: \" + index);\r\n        var cPlayer = this.players[index].getComponent(CPlayer);\r\n        cPlayer.onEnterTurn();\r\n    },\r\n    autoShowSuggest:function(){\r\n        this.nodeSuggestGesture.active = true;\r\n    },\r\n    executeAction:function(){\r\n        this.unschedule(this.autoShowSuggest);\r\n        this.nodeSuggestGesture.active = false;\r\n        var actionConfig = this._gameFake.getAction();\r\n        console.log(\"executeAction:\" + JSON.stringify(actionConfig));\r\n        var index = actionConfig.index;\r\n\r\n        var type = actionConfig.type;\r\n        switch (type) {\r\n            case ActionType.PASS:\r\n                this.onPassAt(index);\r\n                break;\r\n            case ActionType.DISCARD:\r\n                this.onDiscardAt(index,actionConfig.cards,actionConfig.group);\r\n                break;\r\n        }\r\n        var sound = actionConfig.sound;\r\n        if(sound){\r\n            setTimeout(function () {\r\n                this.audio.playAudio(sound);\r\n            }.bind(this),500);\r\n        }\r\n\r\n        var emo = actionConfig.emo;\r\n        if(emo != null){\r\n            if(emo instanceof Array){\r\n                for (var k = 0; k < emo.length; k++) {\r\n                    setTimeout(function (i) {\r\n                        this._playEmo(i);\r\n                    }.bind(this,emo[k]),k  * 2000);\r\n                }\r\n            }else{\r\n                this._playEmo(emo);\r\n                if(emo === 5){\r\n                    this._playEmo(6);\r\n                }\r\n            }\r\n        }\r\n        if(actionConfig.isEnded){\r\n            setTimeout(function () {\r\n                for (var i = 0; i < this.imgHands.length; i++) {\r\n                    var hand = this.imgHands[i];\r\n                    hand.node.runAction(cc.moveBy(0.5,0,-300));\r\n                }\r\n            }.bind(this),1000);\r\n            setTimeout(function () {\r\n                this.audio.playAudio(SoundType.WIN);\r\n                this.effectWin.active = true;\r\n            }.bind(this),2500);\r\n        }else{\r\n            this.curIndex = actionConfig.next;\r\n            var actionNext = this._gameFake.next();\r\n            if(actionNext){\r\n                this.onEnterTurn(actionNext.index);\r\n                console.log(\"actionNext:\" + JSON.stringify(actionNext));\r\n                var delayTime = actionNext.time;\r\n                if(delayTime>0){\r\n                    this.scheduleOnce(function () {\r\n                        var actionConfig = this._gameFake.getAction();\r\n                        var index = actionConfig.index;\r\n                        if(index === 0 ){\r\n                            this.audio.playSoundYourTurn();\r\n                            if(actionConfig.suggest){//neu co suggest\r\n                                this.nodeSuggestGesture.active = true;\r\n                                this.players[0].getComponent(CPlayer).onSuggestCard(actionConfig.cards);\r\n                            }else{\r\n                                this.scheduleOnce(this.autoShowSuggest,3);\r\n                            }\r\n                            this.cardExpects = actionConfig.cards;\r\n                            return;\r\n                        }\r\n                        this.executeAction();\r\n                    }.bind(this),delayTime);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    onPassAt:function(index){\r\n        console.log(\"onPassAt:\" + index);\r\n        var cPlayer = this.players[index].getComponent(CPlayer);\r\n        cPlayer.onPass();\r\n    },\r\n    onDiscardAt:function(index,cards,groupType){\r\n        console.log(\"onDiscardAt:\" + index +\"|\" + JSON.stringify(cards));\r\n        var cTable = this.table.getComponent(CTable);\r\n        var cardPrefabs = this.players[index].getComponent(CPlayer).onDiscard(cards);\r\n\r\n        var effectDiscard = function (cardPrefab) {\r\n            //1. move den dock -> xoay lai 0 do -> nay bat ra ra 1 ti\r\n            var cCard = cardPrefab.getComponent(CCard);\r\n            var len = cTable.numCard;\r\n            var index = cCard.index;\r\n\r\n            var p = cTable.getPositionCard(cCard);\r\n            var duration = 0.3;\r\n            var duration1 = 0.15;\r\n            cardPrefab.setRotation(330,0,0);\r\n            cardPrefab.runAction(cc.sequence(\r\n                cc.spawn(\r\n                    cc.moveTo(duration,p),\r\n                    cc.rotateTo(duration,0),\r\n                    cc.sequence(\r\n                        cc.scaleTo(duration/2,1.1,1.1),\r\n                        cc.scaleTo(duration/2,0.85,0.85)\r\n                    )\r\n                ),\r\n                cc.spawn(\r\n                    cc.scaleTo(duration1,0.90,0.90),\r\n                    cc.moveTo(duration1,p.x+ (Math.random() * 10 * (index - (len-1)/2)),p.y),\r\n                    cc.rotateTo(duration1, (index - (len - 1)/2) * Math.random() * 4)\r\n                )\r\n            ));\r\n        };\r\n        var len = cardPrefabs.length;\r\n        cTable.setNumCard(len);\r\n\r\n        this.imgHighLight.zIndex = this.zIndexCard;\r\n        this.imgHighLight.active = true;\r\n        this.imgHighLight.opacity = 0;\r\n        this.imgHighLight.runAction(cc.sequence(\r\n            cc.hide(),\r\n            cc.delayTime(0.6),\r\n            cc.show(),\r\n            cc.fadeIn(0.3),\r\n            cc.delayTime(1),\r\n            cc.fadeOut(0.3),\r\n            cc.callFunc(function (sender) {\r\n                sender.active = false;\r\n            },this)\r\n        ))\r\n\r\n        for (var k = 0; k < len; k++) {\r\n            var cardPrefab = cardPrefabs[k];\r\n            var cCard = cardPrefab.getComponent(CCard);\r\n            cCard.index = (k);\r\n            cCard.owner = cTable;\r\n            cardPrefab.zIndex = ++ this.zIndexCard;\r\n\r\n            effectDiscard(cardPrefab);\r\n\r\n            // var p = cTable.getPositionCard(cCard);\r\n            // cardPrefab.runAction(cc.spawn(\r\n            //     cc.moveTo(0.15,p),\r\n            //     cc.rotateTo(1,0)\r\n            // ));\r\n            // cc.log(\"newZIndex:\" + this.zIndexCard);\r\n\r\n            //duoc add khi tao ra\r\n            // this.layerGame.addChild(cardPrefab);\r\n        }\r\n\r\n\r\n        switch (groupType) {\r\n            case CardGroup.FLUSH:\r\n                this._playEffectGroup('flush');\r\n                break;\r\n            case CardGroup.STRAIGHT:\r\n                this._playEffectGroup('straight');\r\n                break;\r\n            case CardGroup.FULL_HOUSE:\r\n                this._playEffectGroup('fullhouse');\r\n                break;\r\n            case CardGroup.FOUR_OF_KIND:\r\n                this._playEffectGroup('forofakind');\r\n                break;\r\n            case CardGroup.NONE:\r\n            default:\r\n                break;\r\n        }\r\n        // for (var j = 0; j < cards.length; j++) {\r\n        //     var c = cards[j];\r\n        //\r\n        //     var cardPrefabs = this._poolCard.get();\r\n        //     if(!cardPrefabs){cardPrefabs = cc.instantiate(this.cardPrefab);}\r\n        //\r\n        //     var cCard = cardPrefabs.getComponent(CCard);\r\n        //\r\n        //     cCard.setCard(c);\r\n        //     cCard.index = (j);\r\n        //     cCard.owner = cTable;\r\n        //\r\n        //     var p = cTable.getPositionCard(cCard);\r\n        //     cardPrefabs.setPosition(p);\r\n        //     this.layerGame.addChild(cardPrefabs);\r\n        // }\r\n    },\r\n\r\n    onTouchCard:function(event){\r\n        var data = event.getUserData();\r\n        var cCard = data.card;\r\n        var owner = cCard.owner;\r\n        if(owner instanceof CTable){\r\n            console.log(\"passing card on table\");\r\n            return;\r\n        }\r\n        if(owner instanceof CPlayer){\r\n            if(this.isMyTurn()){\r\n                if(this.isTouchExpectCards(cCard.card)){\r\n                    switch (data.event.type) {\r\n                        case cc.Node.EventType.TOUCH_START:\r\n                            this.startPointTouch = data.event.getLocation();\r\n                            break;\r\n                        case cc.Node.EventType.TOUCH_MOVE:\r\n                            break;\r\n                        case cc.Node.EventType.TOUCH_END:\r\n                        case cc.Node.EventType.TOUCH_CANCEL:\r\n                            if(this.startPointTouch){\r\n                                var pos = data.event.getLocation();\r\n                                if(pos.y - this.startPointTouch.y > 45){\r\n                                    this.executeAction();\r\n                                    cc.log(\"Discard on my turn\");\r\n                                }else{\r\n                                    cc.log(\"!!Discard on my turn\");\r\n                                }\r\n                            }\r\n                            cc.log(\"touch:\" + JSON.stringify(this.startPointTouch) +\"| \"+ JSON.stringify(pos))\r\n                            break;\r\n                    }\r\n                }else{\r\n                    cc.log(\"not expects card\");\r\n                }\r\n            }else{\r\n                cc.log(\"not my turn\");\r\n            }\r\n            // owner.onTouchCard(data.event,data.card)\r\n        }\r\n        // console.log(\"onTouchCard at controler\");\r\n    },\r\n\r\n    onPlayNow: function () {\r\n        console.log(\"onPlay path main\");\r\n        PlayableAds.onCTAClick();\r\n    },\r\n\r\n    onTouchDump: function () {\r\n        console.log(\"touch Dump\");\r\n    },\r\n\r\n    onTouchPass: function () {\r\n        console.log(\"touch Pass\");\r\n    },\r\n\r\n    getNewCard:function(){\r\n        var cardPrefab = this._poolCard.get();\r\n        if(!cardPrefab){cardPrefab = cc.instantiate(this.cardPrefab);}\r\n        return cardPrefab;\r\n    },\r\n\r\n    isMyTurn:function () {\r\n        return this.curIndex === 0;\r\n    },\r\n    isTouchExpectCards:function (card) {\r\n        var len = this.cardExpects.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var c = this.cardExpects[i];\r\n            if(c.id === card.id){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    showNodeCHPlay:function () {\r\n        this.nodeCHPlay.active = true;\r\n    }\r\n});"]}