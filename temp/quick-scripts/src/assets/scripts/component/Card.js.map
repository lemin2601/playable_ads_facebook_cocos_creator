{"version":3,"sources":["assets\\scripts\\component\\Card.js"],"names":["MyPlayer","require","Types","cc","Class","Component","properties","rank","Label","suit","Sprite","mainPic","cardBG","redTextColor","Color","RED","blackTextColor","WHITE","texFrontBG","SpriteFrame","texBackBG","texFaces","type","texSuitBig","texSuitSmall","index","Integer","visible","id","isSelected","Boolean","owner","Node","isDraging","card","Card","setOwner","onLoad","console","log","string","node","on","EventType","TOUCH_START","onTouch","TOUCH_MOVE","TOUCH_END","TOUCH_CANCEL","event","myPlayer","getComponent","onTouchCard","onTouchStart","onTouchMove","pos","getLocation","onTouchEnd","onTouchCancel","setId","init","isFaceCard","point","spriteFrame","pointName","isRedSuit","color","reveal","isFaceUp","active"],"mappings":"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","sourceRoot":"/","sourcesContent":["let MyPlayer = require(\"MyPlayer\");\r\nlet Types = require(\"Types\");\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // nodes\r\n        rank   : cc.Label,\r\n        suit   : cc.Sprite,\r\n        mainPic: cc.Sprite,\r\n        cardBG : cc.Sprite,\r\n\r\n        // resources\r\n        redTextColor  : cc.Color.RED,\r\n        blackTextColor: cc.Color.WHITE,\r\n        texFrontBG    : cc.SpriteFrame,\r\n        texBackBG     : cc.SpriteFrame,\r\n\r\n        texFaces      : {\r\n            default: [],\r\n            type   : cc.SpriteFrame\r\n        },\r\n        texSuitBig    : {\r\n            default: [],\r\n            type   : cc.SpriteFrame\r\n        },\r\n        texSuitSmall  : {\r\n            default: [],\r\n            type   : cc.SpriteFrame\r\n        },\r\n        index:{//vi tri trong group khi danh ra\r\n            default:0,\r\n            type:cc.Integer,\r\n            visible:false,\r\n        },\r\n        id:{//id card\r\n            default:0,\r\n            type:cc.Integer,\r\n            visible:false,\r\n        },\r\n        isSelected:{ // trang thai co select khong\r\n            default:false,\r\n            type:cc.Boolean,\r\n            visible:false\r\n        },\r\n        owner:{//so huu quan bai, myPlayer hoac dock duoi table\r\n            default:null,\r\n            type:cc.Node,\r\n            visible:false\r\n        },\r\n        isDraging:{\r\n            default:true,\r\n            type:cc.Boolean,\r\n            visible:false\r\n        },\r\n\r\n        card:{\r\n            default:null,\r\n            type:Types.Card\r\n        }\r\n    },\r\n\r\n    /**\r\n     * my player | dock\r\n     * @param owner {cc.Node}\r\n     */\r\n    setOwner:function(owner){\r\n        this.owner = owner;\r\n    },\r\n    onLoad(){\r\n        console.log(\"loadCard:\" + this.id);\r\n        this.rank.string = (this.id % 12);\r\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouch, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouch, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouch, this);\r\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouch, this);\r\n    },\r\n    onTouch:function(event){\r\n        if(this.owner) {\r\n            let myPlayer = this.owner.getComponent(MyPlayer);\r\n            myPlayer.onTouchCard(event,this);\r\n        }else{\r\n            console.log(\"not found owner's card:\" + this.id);\r\n        }\r\n    },\r\n    onTouchStart:function(event){\r\n        console.log(\"onTouchStart:\" + this.id);\r\n    },\r\n    /**\r\n     *\r\n     * @param event {cc.EventTouch}\r\n     */\r\n    onTouchMove:function(event){\r\n        let pos = event.getLocation();\r\n        if(this.owner){\r\n\r\n        }\r\n        console.log(\"onTouchMove:\" + this.id);\r\n    },\r\n    onTouchEnd:function(event){\r\n        console.log(\"onTouchEnd:\" + this.id);\r\n    },\r\n    onTouchCancel:function(event){\r\n        console.log(\"onTouchCancel:\" + this.id);\r\n    },\r\n    setId:function(id){\r\n        console.log(\"setId:\" + this.id +\"|\" + id);\r\n        this.id = id;\r\n    },\r\n    // use this for initialization\r\n    init: function (card) {\r\n        var isFaceCard = card.point > 10;\r\n\r\n        if (isFaceCard) {\r\n            this.mainPic.spriteFrame = this.texFaces[card.point - 10 - 1];\r\n        } else {\r\n            this.mainPic.spriteFrame = this.texSuitBig[card.suit - 1];\r\n        }\r\n\r\n        // for jsb\r\n        this.point.string = card.pointName;\r\n\r\n        if (card.isRedSuit) {\r\n            this.point.node.color = this.redTextColor;\r\n        } else {\r\n            this.point.node.color = this.blackTextColor;\r\n        }\r\n\r\n        this.suit.spriteFrame = this.texSuitSmall[card.suit - 1];\r\n    },\r\n\r\n    reveal: function (isFaceUp) {\r\n        this.point.node.active   = isFaceUp;\r\n        this.suit.node.active    = isFaceUp;\r\n        this.mainPic.node.active = isFaceUp;\r\n        this.cardBG.spriteFrame  = isFaceUp ? this.texFrontBG : this.texBackBG;\r\n    },\r\n});\r\n"]}