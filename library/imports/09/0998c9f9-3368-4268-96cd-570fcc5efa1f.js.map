{"version":3,"sources":["assets\\scripts\\GameController.js"],"names":["PlayableState","require","PoolHandler","CCard","CTable","CPlayer","Card","Table","Player","ActionType","GameFake","SoundType","PlayableAds","CAudio","cc","Class","Component","properties","playableState","type","serializable","visible","btnPlayNow","Button","btnDump","btnPass","layerGame","Node","layerAction","table","players","layerCard","effectWin","cardPrefab","Prefab","_poolCard","NodePool","_gameFake","ctor","curIndex","cardExpects","startPointTouch","zIndexCard","audio","onEnable","console","log","length","onLoad","node","getComponent","active","gameInfo","getDefaultInfo","tableConfig","id","stake","pot","setTable","cards","dock","cTable","setNumCard","j","c","cardPrefabs","get","instantiate","cCard","setCard","index","setOwner","p","getPositionCard","setPosition","addChild","playersConfig","k","playerConfig","player","displayName","gold","avatarIndex","cPlayer","setGameController","setPlayer","on","onTouchCard","actionConfig","getAction","delayTime","time","scheduleOnce","executeAction","bind","start","JSON","stringify","PASS","onPassAt","DISCARD","onDiscardAt","sound","playAudio","isEnded","next","actionNext","suggest","onPass","onDiscard","len","owner","zIndex","runAction","spawn","moveTo","rotateTo","event","data","getUserData","card","isMyTurn","isTouchExpectCards","EventType","TOUCH_START","getLocation","TOUCH_MOVE","TOUCH_END","TOUCH_CANCEL","pos","y","onPlayNow","onCTAClick","onTouchDump","onTouchPass","getNewCard","i"],"mappings":"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","sourceRoot":"/","sourcesContent":["var PlayableState = require('PlayableState');\r\nvar PoolHandler = require(\"PoolHandler\");\r\nvar CCard = require(\"CCard\");\r\nvar CTable = require(\"CTable\");\r\nvar CPlayer = require(\"CPlayer\");\r\nvar {Card,Table,Player} = require(\"Types\");\r\nvar {ActionType,GameFake,SoundType} = require(\"GameFake\");\r\nvar PlayableAds = require(\"PlayableAds\");\r\nvar CAudio = require(\"CAudio\");\r\n\r\ncc.Class({\r\n    extends   : cc.Component,\r\n    properties: {\r\n        playableState: {\r\n            default     : null,\r\n            type        : PlayableState,\r\n            serializable: false,\r\n            visible     : false\r\n        },\r\n        btnPlayNow   : cc.Button,\r\n        btnDump      : cc.Button,\r\n        btnPass      : cc.Button,\r\n        layerGame    : cc.Node,\r\n        layerAction  : cc.Node,\r\n        table:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        players  : {\r\n            default: [],\r\n            type   : cc.Node\r\n        },\r\n        layerCard:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n\r\n        effectWin:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        cardPrefab: {\r\n            default: null,\r\n            type   : cc.Prefab\r\n        },\r\n\r\n        _poolCard: {\r\n            default: null,\r\n            type   : cc.NodePool,\r\n            visible:false\r\n        },\r\n        _gameFake:{\r\n            default:null,\r\n            type: GameFake,\r\n            visible:false\r\n        },\r\n    },\r\n\r\n    ctor: function () {\r\n        this.curIndex = -1;\r\n        this.cardExpects = [];\r\n        this.startPointTouch = null;\r\n        this.zIndexCard = 10;\r\n        this.audio = null;\r\n    },\r\n\r\n    onEnable:function(){\r\n        console.log(\"onEnable players:\" + this.players.length);\r\n    },\r\n    onLoad: function () {\r\n        this.audio = this.node.getComponent(CAudio);\r\n        this.effectWin.active = false;\r\n        //1. khoi tao info ban dau\r\n        this._poolCard = new cc.NodePool(CCard);\r\n        this._gameFake = new GameFake();\r\n        var gameInfo = this._gameFake.getDefaultInfo();\r\n        var tableConfig = gameInfo.table;\r\n        var table = new Table(tableConfig.id,tableConfig.stake,tableConfig.pot);\r\n        this.table.getComponent(CTable).setTable(table);\r\n\r\n        //create new Card on Dock\r\n        var cards = tableConfig.dock;\r\n        var cTable = this.table.getComponent(CTable);\r\n        cTable.setNumCard(cards.length);\r\n        for (var j = 0; j < cards.length; j++) {\r\n            var c = cards[j];\r\n\r\n            var cardPrefabs = this._poolCard.get();\r\n            if(!cardPrefabs){cardPrefabs = cc.instantiate(this.cardPrefab);}\r\n\r\n            var cCard = cardPrefabs.getComponent(CCard);\r\n\r\n            cCard.setCard(c);\r\n            cCard.index = (j);\r\n            cCard.setOwner(cTable);\r\n\r\n            var p = cTable.getPositionCard(cCard);\r\n            cardPrefabs.setPosition(p);\r\n            this.layerCard.addChild(cardPrefabs);\r\n        }\r\n        console.log(\"onEnable players:\" + this.players.length);\r\n\r\n        //update info avatar\r\n        var playersConfig = gameInfo.players;\r\n        for (var k = 0; k < playersConfig.length; k++) {\r\n            var playerConfig = playersConfig[k];\r\n            var player = new Player(playerConfig.index,playerConfig.displayName,playerConfig.gold,playerConfig.avatarIndex,playerConfig.cards);\r\n            console.log(\"get palyer at:\" + player.index);\r\n            var cPlayer = this.players[player.index].getComponent(CPlayer);\r\n            cPlayer.setGameController(this);\r\n            cPlayer.setPlayer(player);\r\n        }\r\n        //load prefab cardPrefabs\r\n        // cc.loader.loadRes(\"prefabs/cardPrefab\", function (err, prefab) {\r\n        //     var newNode = cc.instantiate(prefab);\r\n        //     newNode.setPosition(100,100);\r\n        //     this.layerGame.addChild(newNode);\r\n        //     // cc.director.getScene().addChild(newNode);\r\n        // }.bind(this));\r\n        this.node.on(\"card-touch\",this.onTouchCard,this);\r\n\r\n        var actionConfig = this._gameFake.getAction();\r\n        var delayTime = actionConfig.time;\r\n        if(delayTime>0){\r\n            this.scheduleOnce(function () {\r\n                this.executeAction();\r\n            }.bind(this),delayTime);\r\n        }\r\n    },\r\n    start:function(){\r\n\r\n    },\r\n\r\n    executeAction:function(){\r\n        var actionConfig = this._gameFake.getAction();\r\n        console.log(\"executeAction:\" + JSON.stringify(actionConfig));\r\n        var index = actionConfig.index;\r\n\r\n        var type = actionConfig.type;\r\n        switch (type) {\r\n            case ActionType.PASS:\r\n                this.onPassAt(index);\r\n                break;\r\n            case ActionType.DISCARD:\r\n                this.onDiscardAt(index,actionConfig.cards);\r\n                break;\r\n        }\r\n        var sound = actionConfig.sound;\r\n        if(sound){\r\n            this.audio.playAudio(sound);\r\n        }\r\n        if(actionConfig.isEnded){\r\n            this.effectWin.active = true;\r\n        }else{\r\n            this.curIndex = actionConfig.next;\r\n            var actionNext = this._gameFake.next();\r\n            if(actionNext){\r\n                console.log(\"actionNext:\" + JSON.stringify(actionNext));\r\n                var delayTime = actionNext.time;\r\n                if(delayTime>0){\r\n                    this.scheduleOnce(function () {\r\n                        var actionConfig = this._gameFake.getAction();\r\n                        var index = actionConfig.index;\r\n                        if(index === 0 ){\r\n                            if(actionConfig.suggest){//neu co suggest\r\n\r\n                            }\r\n                            this.cardExpects = actionConfig.cards;\r\n                            return;\r\n                        }\r\n                        this.executeAction();\r\n                    }.bind(this),delayTime);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    onPassAt:function(index){\r\n        console.log(\"onPassAt:\" + index);\r\n        var cPlayer = this.players[index].getComponent(CPlayer);\r\n        cPlayer.onPass();\r\n    },\r\n    onDiscardAt:function(index,cards){\r\n        console.log(\"onDiscardAt:\" + index +\"|\" + JSON.stringify(cards));\r\n        var cTable = this.table.getComponent(CTable);\r\n        var cardPrefabs = this.players[index].getComponent(CPlayer).onDiscard(cards);\r\n\r\n        var len = cardPrefabs.length;\r\n        cTable.setNumCard(len);\r\n        for (var k = 0; k < len; k++) {\r\n            var cardPrefab = cardPrefabs[k];\r\n            var cCard = cardPrefab.getComponent(CCard);\r\n            cCard.index = (k);\r\n            cCard.owner = cTable;\r\n            var p = cTable.getPositionCard(cCard);\r\n            cardPrefab.zIndex = ++ this.zIndexCard;\r\n            // cardPrefab.setPosition(p);\r\n            cardPrefab.runAction(cc.spawn(\r\n                cc.moveTo(1,p),\r\n                cc.rotateTo(1,0)\r\n            ));\r\n            cc.log(\"newZIndex:\" + this.zIndexCard)\r\n;\r\n            // this.layerGame.addChild(cardPrefab);\r\n        }\r\n\r\n        // for (var j = 0; j < cards.length; j++) {\r\n        //     var c = cards[j];\r\n        //\r\n        //     var cardPrefabs = this._poolCard.get();\r\n        //     if(!cardPrefabs){cardPrefabs = cc.instantiate(this.cardPrefab);}\r\n        //\r\n        //     var cCard = cardPrefabs.getComponent(CCard);\r\n        //\r\n        //     cCard.setCard(c);\r\n        //     cCard.index = (j);\r\n        //     cCard.owner = cTable;\r\n        //\r\n        //     var p = cTable.getPositionCard(cCard);\r\n        //     cardPrefabs.setPosition(p);\r\n        //     this.layerGame.addChild(cardPrefabs);\r\n        // }\r\n    },\r\n\r\n    onTouchCard:function(event){\r\n        var data = event.getUserData();\r\n        var cCard = data.card;\r\n        var owner = cCard.owner;\r\n        if(owner instanceof CTable){\r\n            console.log(\"passing card on table\");\r\n            return;\r\n        }\r\n        if(owner instanceof CPlayer){\r\n            if(this.isMyTurn()){\r\n                if(this.isTouchExpectCards(cCard.card)){\r\n                    switch (data.event.type) {\r\n                        case cc.Node.EventType.TOUCH_START:\r\n                            this.startPointTouch = data.event.getLocation();\r\n                            break;\r\n                        case cc.Node.EventType.TOUCH_MOVE:\r\n                            break;\r\n                        case cc.Node.EventType.TOUCH_END:\r\n                        case cc.Node.EventType.TOUCH_CANCEL:\r\n                            var pos = data.event.getLocation();\r\n                            if(pos.y - this.startPointTouch.y > 45){\r\n                                this.executeAction();\r\n                                cc.log(\"Discard on my turn\");\r\n                            }else{\r\n                                cc.log(\"!!Discard on my turn\");\r\n                            }\r\n                            cc.log(\"touch:\" + JSON.stringify(this.startPointTouch) +\"| \"+ JSON.stringify(pos))\r\n                            break;\r\n                    }\r\n                }else{\r\n                    cc.log(\"not expects card\");\r\n                }\r\n            }else{\r\n                cc.log(\"not my turn\");\r\n            }\r\n            // owner.onTouchCard(data.event,data.card)\r\n        }\r\n        // console.log(\"onTouchCard at controler\");\r\n    },\r\n\r\n    onPlayNow: function () {\r\n        console.log(\"onPlay path main\");\r\n        PlayableAds.onCTAClick();\r\n    },\r\n\r\n    onTouchDump: function () {\r\n        console.log(\"touch Dump\");\r\n    },\r\n\r\n    onTouchPass: function () {\r\n        console.log(\"touch Pass\");\r\n    },\r\n\r\n    getNewCard:function(){\r\n        var cardPrefab = this._poolCard.get();\r\n        if(!cardPrefab){cardPrefab = cc.instantiate(this.cardPrefab);}\r\n        return cardPrefab;\r\n    },\r\n\r\n    isMyTurn:function () {\r\n        return this.curIndex === 0;\r\n    },\r\n    isTouchExpectCards:function (card) {\r\n        var len = this.cardExpects.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var c = this.cardExpects[i];\r\n            if(c.id === card.id){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n});"]}