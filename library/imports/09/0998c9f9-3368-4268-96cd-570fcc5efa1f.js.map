{"version":3,"sources":["assets\\scripts\\GameController.js"],"names":["PlayableState","require","PoolHandler","CCard","CTable","CPlayer","Card","Table","Player","ActionType","GameFake","SoundType","PlayableAds","CAudio","Utility","cc","Class","Component","properties","playableState","type","serializable","visible","btnPlayNow","Button","btnDump","btnPass","layerGame","Node","layerAction","table","players","layerCard","nodeSuggestGesture","nodeCHPlay","effectWin","cardPrefab","Prefab","imgHands","Sprite","emoPlayers","_poolCard","NodePool","_gameFake","ctor","curIndex","cardExpects","startPointTouch","zIndexCard","audio","_posHands","onLoad","i","length","push","node","getPosition","active","getComponent","gameController","attachLayerCardToPlayer","gameInfo","getDefaultInfo","tableConfig","id","stake","pot","setTable","cards","dock","cTable","setNumCard","j","c","cardPrefabs","get","instantiate","cCard","setCard","index","setOwner","p","getPositionCard","setPosition","addChild","console","log","playersConfig","k","playerConfig","player","displayName","gold","avatarIndex","cPlayer","setGameController","setPlayer","on","onTouchCard","actionConfig","getAction","delayTime","time","onEnterTurn","scheduleOnce","executeAction","bind","_playEmo","emo","spine","setCompleteListener","trackEntry","setAnimation","start","onEnable","len","setLayerCard","JSON","stringify","PASS","onPassAt","DISCARD","onDiscardAt","group","sound","playAudio","Array","setTimeout","isEnded","hand","runAction","moveBy","next","actionNext","suggest","onSuggestCard","onPass","groupType","onDiscard","effectDiscard","numCard","duration","duration1","sequence","spawn","moveTo","rotateTo","scaleTo","x","Math","random","y","owner","zIndex","event","data","getUserData","card","isMyTurn","isTouchExpectCards","EventType","TOUCH_START","getLocation","TOUCH_MOVE","TOUCH_END","TOUCH_CANCEL","pos","onPlayNow","onCTAClick","onTouchDump","onTouchPass","getNewCard","showNodeCHPlay"],"mappings":"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","sourceRoot":"/","sourcesContent":["var PlayableState = require('PlayableState');\r\nvar PoolHandler = require(\"PoolHandler\");\r\nvar CCard = require(\"CCard\");\r\nvar CTable = require(\"CTable\");\r\nvar CPlayer = require(\"CPlayer\");\r\nvar {Card,Table,Player} = require(\"Types\");\r\nvar {ActionType,GameFake,SoundType} = require(\"GameFake\");\r\nvar PlayableAds = require(\"PlayableAds\");\r\nvar CAudio = require(\"CAudio\");\r\nvar Utility = require(\"Utility\");\r\n\r\ncc.Class({\r\n    extends   : cc.Component,\r\n    properties: {\r\n        playableState: {\r\n            default     : null,\r\n            type        : PlayableState,\r\n            serializable: false,\r\n            visible     : false\r\n        },\r\n        btnPlayNow   : cc.Button,\r\n        btnDump      : cc.Button,\r\n        btnPass      : cc.Button,\r\n        layerGame    : cc.Node,\r\n        layerAction  : cc.Node,\r\n        table:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        players  : {\r\n            default: [],\r\n            type   : cc.Node\r\n        },\r\n        layerCard:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        nodeSuggestGesture:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        nodeCHPlay:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        effectWin:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        cardPrefab: {\r\n            default: null,\r\n            type   : cc.Prefab\r\n        },\r\n        imgHands:{\r\n            default:[],\r\n            type:[cc.Sprite]\r\n        },\r\n        emoPlayers:{\r\n            default:[],\r\n            type:[cc.Node]\r\n        },\r\n        _poolCard: {\r\n            default: null,\r\n            type   : cc.NodePool,\r\n            visible:false\r\n        },\r\n        _gameFake:{\r\n            default:null,\r\n            type: GameFake,\r\n            visible:false\r\n        },\r\n    },\r\n\r\n    ctor: function () {\r\n        this.curIndex = -1;\r\n        this.cardExpects = [];\r\n        this.startPointTouch = null;\r\n        this.zIndexCard = 10;\r\n        this.audio = null;\r\n        this._posHands = [];\r\n    },\r\n    onLoad: function () {\r\n        for (var i = 0; i < this.imgHands.length; i++) {\r\n            this._posHands.push(this.imgHands[i].node.getPosition());\r\n        }\r\n        this.nodeCHPlay.active = false;\r\n        this.effectWin.getComponent(\"CEffectWin\").gameController = this;\r\n        this.nodeSuggestGesture.active = false;\r\n        this.attachLayerCardToPlayer();\r\n        this.audio = this.node.getComponent(CAudio);\r\n        this.effectWin.active = false;\r\n        //1. khoi tao info ban dau\r\n        this._poolCard = new cc.NodePool(CCard);\r\n        this._gameFake = new GameFake();\r\n        var gameInfo = this._gameFake.getDefaultInfo();\r\n        var tableConfig = gameInfo.table;\r\n        var table = new Table(tableConfig.id,tableConfig.stake,tableConfig.pot);\r\n        this.table.getComponent(CTable).setTable(table);\r\n\r\n        //create new Card on Dock\r\n        var cards = tableConfig.dock;\r\n        var cTable = this.table.getComponent(CTable);\r\n        cTable.setNumCard(cards.length);\r\n        for (var j = 0; j < cards.length; j++) {\r\n            var c = cards[j];\r\n\r\n            var cardPrefabs = this._poolCard.get();\r\n            if(!cardPrefabs){cardPrefabs = cc.instantiate(this.cardPrefab);}\r\n\r\n            var cCard = cardPrefabs.getComponent(CCard);\r\n\r\n            cCard.setCard(c);\r\n            cCard.index = (j);\r\n            cCard.setOwner(cTable);\r\n\r\n            var p = cTable.getPositionCard(cCard);\r\n            cardPrefabs.setPosition(p);\r\n            this.layerCard.addChild(cardPrefabs);\r\n        }\r\n        console.log(\"onEnable players:\" + this.players.length);\r\n\r\n        //update info avatar + load card\r\n        var playersConfig = gameInfo.players;\r\n        for (var k = 0; k < playersConfig.length; k++) {\r\n            var playerConfig = playersConfig[k];\r\n            var player = new Player(playerConfig.index,playerConfig.displayName,playerConfig.gold,playerConfig.avatarIndex,playerConfig.cards);\r\n            console.log(\"get palyer at:\" + player.index);\r\n            var cPlayer = this.players[player.index].getComponent(CPlayer);\r\n            cPlayer.setGameController(this);\r\n            cPlayer.setPlayer(player);\r\n        }\r\n        //load prefab cardPrefabs\r\n        // cc.loader.loadRes(\"prefabs/cardPrefab\", function (err, prefab) {\r\n        //     var newNode = cc.instantiate(prefab);\r\n        //     newNode.setPosition(100,100);\r\n        //     this.layerGame.addChild(newNode);\r\n        //     // cc.director.getScene().addChild(newNode);\r\n        // }.bind(this));\r\n        this.node.on(\"card-touch\",this.onTouchCard,this);\r\n\r\n        var actionConfig = this._gameFake.getAction();\r\n        var delayTime = actionConfig.time;\r\n        this.curIndex = actionConfig.index;\r\n        this.onEnterTurn(actionConfig.index);\r\n        if(delayTime>0){\r\n            this.scheduleOnce(function () {\r\n                this.executeAction();\r\n            }.bind(this),delayTime);\r\n        }\r\n        // this._playEmo(5);\r\n        //\r\n        // setTimeout(function () {\r\n        //     this._playEmo(4);\r\n        // }.bind(this),2000);\r\n    },\r\n    _playEmo:function(index){\r\n        console.log(\"play emo:\" + index);\r\n        var emo = this.emoPlayers[index];\r\n        if(emo){\r\n            var spine = emo.getComponent('sp.Skeleton');\r\n            // spine.setStartListener(function(trackEntry){\r\n            //     var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            //     cc.log(\"[track %s][animation %s] start.\", trackEntry.trackIndex, animationName);\r\n            // });\r\n            // spine.setInterruptListener(function (trackEntry){\r\n            //     var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            //     cc.log(\"[track %s][animation %s] interrupt.\", trackEntry.trackIndex, animationName);\r\n            // });\r\n            // spine.setEndListener(function (trackEntry){\r\n            //     var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            //     cc.log(\"[track %s][animation %s] end.\", trackEntry.trackIndex, animationName);\r\n            // });\r\n            // spine.setDisposeListener(function (trackEntry){\r\n            //     var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            //     cc.log(\"[track %s][animation %s] will be disposed.\", trackEntry.trackIndex, animationName);\r\n            // });\r\n            spine.setCompleteListener(function(trackEntry){\r\n                emo.active = false;\r\n                // var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n                // // if (animationName === 'shoot') {\r\n                // //     this.spine.clearTrack(1);\r\n                // // }\r\n                // var loopCount = Math.floor(trackEntry.trackTime / trackEntry.animationEnd);\r\n                // cc.log(\"[track %s][animation %s] complete: %s\", trackEntry.trackIndex, animationName, loopCount);\r\n            });\r\n            // spine.setEventListener(function(trackEntry, event){\r\n            //     var animationName = trackEntry.animation ? trackEntry.animation.name : \"\";\r\n            //     cc.log(\"[track %s][animation %s] event: %s, %s, %s, %s\", trackEntry.trackIndex, animationName, event.data.name, event.intValue, event.floatValue, event.stringValue);\r\n            // });\r\n            emo.active = true;\r\n            spine.setAnimation(0, 'animation', false);\r\n        }\r\n    },\r\n    start:function(){\r\n\r\n    },\r\n    onEnable:function(){\r\n        console.log(\"onEnable players:\" + this.players.length);\r\n    },\r\n\r\n    attachLayerCardToPlayer:function(){\r\n        var len = this.players.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var cPlayer = this.players[i].getComponent(\"CPlayer\");\r\n            cPlayer.setLayerCard(this.layerCard);\r\n        }\r\n    },\r\n    onEnterTurn:function(index){\r\n        console.log(\"onEnterTurn: \" + index);\r\n        var cPlayer = this.players[index].getComponent(CPlayer);\r\n        cPlayer.onEnterTurn();\r\n    },\r\n    executeAction:function(){\r\n        this.nodeSuggestGesture.active = false;\r\n        var actionConfig = this._gameFake.getAction();\r\n        console.log(\"executeAction:\" + JSON.stringify(actionConfig));\r\n        var index = actionConfig.index;\r\n\r\n        var type = actionConfig.type;\r\n        switch (type) {\r\n            case ActionType.PASS:\r\n                this.onPassAt(index);\r\n                break;\r\n            case ActionType.DISCARD:\r\n                this.onDiscardAt(index,actionConfig.cards,actionConfig.group);\r\n                break;\r\n        }\r\n        var sound = actionConfig.sound;\r\n        if(sound){\r\n            this.audio.playAudio(sound);\r\n        }\r\n\r\n        var emo = actionConfig.emo;\r\n        if(emo != null){\r\n            if(emo instanceof Array){\r\n                for (var k = 0; k < emo.length; k++) {\r\n                    setTimeout(function (i) {\r\n                        this._playEmo(i);\r\n                    }.bind(this,emo[k]),k  * 2000);\r\n                }\r\n            }else{\r\n                this._playEmo(emo);\r\n            }\r\n        }\r\n        if(actionConfig.isEnded){\r\n            this.effectWin.active = true;\r\n            for (var i = 0; i < this.imgHands.length; i++) {\r\n                var hand = this.imgHands[i];\r\n                hand.node.runAction(cc.moveBy(0.5,0,-300));\r\n            }\r\n        }else{\r\n            this.curIndex = actionConfig.next;\r\n            var actionNext = this._gameFake.next();\r\n            if(actionNext){\r\n                this.onEnterTurn(actionNext.index);\r\n                console.log(\"actionNext:\" + JSON.stringify(actionNext));\r\n                var delayTime = actionNext.time;\r\n                if(delayTime>0){\r\n                    this.scheduleOnce(function () {\r\n                        var actionConfig = this._gameFake.getAction();\r\n                        var index = actionConfig.index;\r\n                        if(index === 0 ){\r\n                            if(actionConfig.suggest){//neu co suggest\r\n                                this.nodeSuggestGesture.active = true;\r\n                                this.players[0].getComponent(CPlayer).onSuggestCard(actionConfig.cards);\r\n                            }\r\n                            this.cardExpects = actionConfig.cards;\r\n                            return;\r\n                        }\r\n                        this.executeAction();\r\n                    }.bind(this),delayTime);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    onPassAt:function(index){\r\n        console.log(\"onPassAt:\" + index);\r\n        var cPlayer = this.players[index].getComponent(CPlayer);\r\n        cPlayer.onPass();\r\n    },\r\n    onDiscardAt:function(index,cards,groupType){\r\n        console.log(\"onDiscardAt:\" + index +\"|\" + JSON.stringify(cards));\r\n        var cTable = this.table.getComponent(CTable);\r\n        var cardPrefabs = this.players[index].getComponent(CPlayer).onDiscard(cards);\r\n\r\n        var effectDiscard = function (cardPrefab) {\r\n            //1. move den dock -> xoay lai 0 do -> nay bat ra ra 1 ti\r\n            var cCard = cardPrefab.getComponent(CCard);\r\n            var len = cTable.numCard;\r\n            var index = cCard.index;\r\n\r\n            var p = cTable.getPositionCard(cCard);\r\n            var duration = 0.3;\r\n            var duration1 = 0.15;\r\n            cardPrefab.runAction(cc.sequence(\r\n                cc.spawn(\r\n                    cc.moveTo(duration,p),\r\n                    cc.rotateTo(duration,0),\r\n                    cc.sequence(\r\n                        cc.scaleTo(duration/2,1.2,1.2),\r\n                        cc.scaleTo(duration/2,0.95,0.95)\r\n                    )\r\n                ),\r\n                cc.spawn(\r\n                    cc.scaleTo(duration1,1,1),\r\n                    cc.moveTo(duration1,p.x+ (Math.random() * 10 * (index - (len-1)/2)),p.y),\r\n                    cc.rotateTo(duration1, (index - (len - 1)/2) * Math.random() * 4)\r\n                )\r\n            ));\r\n        };\r\n        var len = cardPrefabs.length;\r\n        cTable.setNumCard(len);\r\n        for (var k = 0; k < len; k++) {\r\n            var cardPrefab = cardPrefabs[k];\r\n            var cCard = cardPrefab.getComponent(CCard);\r\n            cCard.index = (k);\r\n            cCard.owner = cTable;\r\n            cardPrefab.zIndex = ++ this.zIndexCard;\r\n\r\n            effectDiscard(cardPrefab);\r\n\r\n            // var p = cTable.getPositionCard(cCard);\r\n            // cardPrefab.runAction(cc.spawn(\r\n            //     cc.moveTo(0.15,p),\r\n            //     cc.rotateTo(1,0)\r\n            // ));\r\n            // cc.log(\"newZIndex:\" + this.zIndexCard);\r\n\r\n            //duoc add khi tao ra\r\n            // this.layerGame.addChild(cardPrefab);\r\n        }\r\n\r\n        // for (var j = 0; j < cards.length; j++) {\r\n        //     var c = cards[j];\r\n        //\r\n        //     var cardPrefabs = this._poolCard.get();\r\n        //     if(!cardPrefabs){cardPrefabs = cc.instantiate(this.cardPrefab);}\r\n        //\r\n        //     var cCard = cardPrefabs.getComponent(CCard);\r\n        //\r\n        //     cCard.setCard(c);\r\n        //     cCard.index = (j);\r\n        //     cCard.owner = cTable;\r\n        //\r\n        //     var p = cTable.getPositionCard(cCard);\r\n        //     cardPrefabs.setPosition(p);\r\n        //     this.layerGame.addChild(cardPrefabs);\r\n        // }\r\n    },\r\n\r\n    onTouchCard:function(event){\r\n        var data = event.getUserData();\r\n        var cCard = data.card;\r\n        var owner = cCard.owner;\r\n        if(owner instanceof CTable){\r\n            console.log(\"passing card on table\");\r\n            return;\r\n        }\r\n        if(owner instanceof CPlayer){\r\n            if(this.isMyTurn()){\r\n                if(this.isTouchExpectCards(cCard.card)){\r\n                    switch (data.event.type) {\r\n                        case cc.Node.EventType.TOUCH_START:\r\n                            this.startPointTouch = data.event.getLocation();\r\n                            break;\r\n                        case cc.Node.EventType.TOUCH_MOVE:\r\n                            break;\r\n                        case cc.Node.EventType.TOUCH_END:\r\n                        case cc.Node.EventType.TOUCH_CANCEL:\r\n                            if(this.startPointTouch){\r\n                                var pos = data.event.getLocation();\r\n                                if(pos.y - this.startPointTouch.y > 45){\r\n                                    this.executeAction();\r\n                                    cc.log(\"Discard on my turn\");\r\n                                }else{\r\n                                    cc.log(\"!!Discard on my turn\");\r\n                                }\r\n                            }\r\n                            cc.log(\"touch:\" + JSON.stringify(this.startPointTouch) +\"| \"+ JSON.stringify(pos))\r\n                            break;\r\n                    }\r\n                }else{\r\n                    cc.log(\"not expects card\");\r\n                }\r\n            }else{\r\n                cc.log(\"not my turn\");\r\n            }\r\n            // owner.onTouchCard(data.event,data.card)\r\n        }\r\n        // console.log(\"onTouchCard at controler\");\r\n    },\r\n\r\n    onPlayNow: function () {\r\n        console.log(\"onPlay path main\");\r\n        PlayableAds.onCTAClick();\r\n    },\r\n\r\n    onTouchDump: function () {\r\n        console.log(\"touch Dump\");\r\n    },\r\n\r\n    onTouchPass: function () {\r\n        console.log(\"touch Pass\");\r\n    },\r\n\r\n    getNewCard:function(){\r\n        var cardPrefab = this._poolCard.get();\r\n        if(!cardPrefab){cardPrefab = cc.instantiate(this.cardPrefab);}\r\n        return cardPrefab;\r\n    },\r\n\r\n    isMyTurn:function () {\r\n        return this.curIndex === 0;\r\n    },\r\n    isTouchExpectCards:function (card) {\r\n        var len = this.cardExpects.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var c = this.cardExpects[i];\r\n            if(c.id === card.id){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    showNodeCHPlay:function () {\r\n        this.nodeCHPlay.active = true;\r\n    }\r\n});"]}