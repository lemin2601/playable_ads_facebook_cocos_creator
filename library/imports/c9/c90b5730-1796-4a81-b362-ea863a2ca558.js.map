{"version":3,"sources":["assets/scripts/CPlayer.js"],"names":["Types","require","Utility","CPlayer","cc","Class","Component","properties","avatar","Node","displayName","Label","gold","spriteAvatar","type","SpriteFrame","layerCard","imgPass","progressBar","ProgressBar","headProgressBar","ParticleSystem","backCard","Sprite","lbNumCard","ctor","player","gameController","cards","_isMyTurn","_numCard","onLoad","setMyTurn","index","node","active","string","name","formatMoneyFull","_loadCards","console","error","start","update","dt","progress","p","Vec2","rotate","setPosition","setGameController","setPlayer","updateUI","midIndex","getNumCard","midPos","getPositionVia","midRot","getRotationVia","i","length","c","cardPrefab","getNewCard","cCard","getComponent","setCard","setOwner","getPositionCard","r","getRotationCard","angle","runAction","spawn","moveTo","x","y","rotateTo","addChild","push","setLayerCard","onDiscard","cardPrefabs","isContain","id","len","card","unshift","splice","_updatePosCards","pos","getPosition","k","setPositionCenter","log","num","startX","endX","maxOffsetX","offset","getCirclePos","onPass","img","color","Color","GRAY","sequence","delayTime","callFunc","WHITE","bind","onTouchCard","event","owner","EventType","TOUCH_START","TOUCH_MOVE","isDraging","getParent","convertToNodeSpaceAR","getLocation","TOUCH_END","isSelected","TOUCH_CANCEL","onCloseTurn","stopAllActions","scaleTo","onEnterTurn","easing","easeBackOut","b","setSuggest","stopSystem","resetSystem","onSuggestCard","l","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var Types = require(\"Types\");\r\nvar Utility = require(\"Utility\");\r\n\r\nvar CPlayer = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        avatar:cc.Node,\r\n        displayName:cc.Label,\r\n        gold:cc.Label,\r\n        spriteAvatar:{\r\n            default:[],\r\n            type:[cc.SpriteFrame]\r\n        },\r\n        layerCard:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        imgPass:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        progressBar:{\r\n            default:null,\r\n            type:cc.ProgressBar\r\n        },\r\n        headProgressBar:{\r\n            default:null,\r\n            type:cc.ParticleSystem\r\n        },\r\n        backCard:{\r\n            default:null,\r\n            type:cc.Sprite\r\n        },\r\n        lbNumCard:{\r\n            default:null,\r\n            type:cc.Label\r\n        }\r\n    },\r\n    ctor:function(){\r\n        /** @type {Player}*/\r\n        this.player = null;\r\n        /** @type {GameController}*/\r\n        this.gameController = null;\r\n        /** @type {[cardPrefab]}*/\r\n        this.cards = [];\r\n        this._isMyTurn = false;\r\n        this._numCard = 0;\r\n    },\r\n    onLoad:function(){\r\n        this.setMyTurn(this._isMyTurn);\r\n        if(this.player){\r\n            if(this.player.index === 0){\r\n                this.backCard.node.active = false;\r\n            }\r\n            this.displayName.string = this.player.name;\r\n            this.gold.string = Utility.formatMoneyFull(this.player.gold);\r\n\r\n            // var circleAvatar = this.avatar.getComponent(\"CCircleAvatar\");\r\n            // circleAvatar.changeAvatar(this.spriteAvatar[this.player.avatar]);\r\n\r\n            //loadCards\r\n            this._loadCards();\r\n        }else{\r\n            console.error(\"need load setPlayer info onLoad\");\r\n        }\r\n        if(this.imgPass){\r\n            this.imgPass.active = false;\r\n        }\r\n    },\r\n    start:function () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        if(this._isMyTurn){\r\n            var progressBar = this.progressBar;\r\n            var progress = progressBar.progress;\r\n            if(progress > 0){\r\n                progress -= (dt * 0.1);\r\n            }\r\n            progressBar.progress = progress;\r\n\r\n            var p = new cc.Vec2(0,75);\r\n            p = p.rotate(progress * 2 * 3.14);\r\n            this.headProgressBar.node.setPosition(p);\r\n        }\r\n    },\r\n\r\n    setGameController:function(gameController){\r\n        this.gameController = gameController;\r\n    },\r\n    setPlayer:function (player) {\r\n        this.player = player;\r\n        if(this.player.index !== 0){\r\n            this._numCard = 11;\r\n        }\r\n    },\r\n    updateUI:function () {\r\n\r\n    },\r\n    _loadCards:function () {\r\n        var midIndex = this.getNumCard()/2;\r\n        var midPos = this.getPositionVia(midIndex);\r\n        var midRot = this.getRotationVia(midIndex);\r\n        if(this.gameController){\r\n            var cards = this.player.cards;\r\n            for (var i = 0; i < cards.length; i++) {\r\n                var c = cards[i];\r\n                var cardPrefab = this.gameController.getNewCard();\r\n                var cCard = cardPrefab.getComponent(\"CCard\");\r\n\r\n                cCard.setCard(c);\r\n                cCard.index = (i);\r\n                cCard.setOwner(this);\r\n\r\n                var p = this.getPositionCard(cCard);\r\n                var r = this.getRotationCard(cCard);\r\n                // cardPrefab.setPosition(p);\r\n                // cardPrefab.angle = (-r);\r\n                cardPrefab.setPosition(midPos);\r\n                cardPrefab.angle = -midRot;\r\n                cardPrefab.runAction(cc.spawn(\r\n                    cc.moveTo(0.6,p.x,p.y),\r\n                    cc.rotateTo(0.6,r)\r\n                ));\r\n                this.layerCard.addChild(cardPrefab);\r\n                this.cards.push(cardPrefab);\r\n            }\r\n            this.lbNumCard.string = this.getNumCard();\r\n        }else{\r\n            console.error(\"don't have GameControler in Player, so can't create newCard\");\r\n        }\r\n    },\r\n    setLayerCard:function(layerCard){\r\n        this.layerCard = layerCard;\r\n    },\r\n    onDiscard:function(cards){\r\n        this.setMyTurn(false);\r\n        if(this.layerCard == null){\r\n            console.error(\"you need add layerCard to player beforeDiscard\");\r\n            return [];\r\n        }\r\n        var cardPrefabs = [];\r\n        if(this.player && this.player.index === 0){\r\n            var isContain = function (c) {\r\n                for (var i = 0; i < cards.length; i++) {\r\n                    if(c.id=== cards[i].id){\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n            var len = this.cards.length;\r\n            for (var i = len - 1; i >= 0; i--) {\r\n                var cardPrefab = this.cards[i];\r\n                var cCard = cardPrefab.getComponent(\"CCard\");\r\n                if(isContain(cCard.card)){\r\n                    cardPrefabs.unshift(cardPrefab);\r\n                    this.cards.splice(i,1);\r\n                    this.player.cards.splice(i,1);\r\n                }\r\n            }\r\n            this._updatePosCards();\r\n        }else{\r\n            var pos = this.node.getPosition();\r\n            pos.x += this.backCard.node.getPosition().x;\r\n            for (var k = 0; k < cards.length; k++) {\r\n                var cardPrefab = this.gameController.getNewCard();\r\n                var cCard = cardPrefab.getComponent(\"CCard\");\r\n                cCard.setCard(cards[k]);\r\n                cardPrefab.angle = 0;\r\n                cCard.setPositionCenter(pos);\r\n                cardPrefabs.push(cardPrefab);\r\n                this.layerCard.addChild(cardPrefab);\r\n            }\r\n            this._numCard -= cards.length;\r\n        }\r\n        this.lbNumCard.string = this.getNumCard();\r\n        return cardPrefabs;\r\n    },\r\n    _updatePosCards:function(){\r\n        console.log(\"_updatePosCards\");\r\n        var midIndex = this.getNumCard()/2;\r\n        var midPos = this.getPositionVia(midIndex);\r\n        var midRot = this.getRotationVia(midIndex);\r\n        if(this.gameController){\r\n            var cards = this.cards;\r\n            for (var i = 0; i < cards.length; i++) {\r\n                var cardPrefab = cards[i];\r\n                var cCard = cardPrefab.getComponent(\"CCard\");\r\n\r\n                cCard.index = (i);\r\n\r\n                var p = this.getPositionCard(cCard);\r\n                var r = this.getRotationCard(cCard);\r\n                // cardPrefab.setPosition(p);\r\n                // cardPrefab.angle = (-r);\r\n                // cardPrefab.setPosition(midPos);\r\n                // cardPrefab.angle = -midRot;\r\n                cardPrefab.runAction(cc.spawn(\r\n                    cc.moveTo(0.2,p.x,p.y),\r\n                    cc.rotateTo(0.2,r)\r\n                ));\r\n            }\r\n        }else{\r\n            console.error(\"don't have GameControler in Player, so can't create newCard\");\r\n        }\r\n    },\r\n\r\n    getNumCard:function(){\r\n        if(this.player){\r\n            if(this.player.index !== 0){\r\n                return this._numCard;\r\n            }\r\n            return this.player.cards.length;\r\n        }\r\n        return 1;\r\n    },\r\n    getRotationCard:function (cCard) {\r\n        var index = cCard.index;\r\n        return this.getRotationVia(index);\r\n    },\r\n\r\n    getRotationVia:function(index){\r\n        var num = this.getNumCard();\r\n        var y = 0;\r\n        var startX = -95;\r\n        var endX = 75;\r\n        // var startX = -60;\r\n        // var endX = 48;\r\n        var maxOffsetX = num < 7 ? 20 : 50;\r\n        var offset = (endX - startX) / (num - 1);\r\n        if(offset > maxOffsetX) offset = maxOffsetX;\r\n        //re-call startX;\r\n        startX = startX +  (endX - startX - (offset *(num - 1)))/2;\r\n        return startX + (offset * index);\r\n    },\r\n    /**\r\n     *\r\n     * @param cCard {CCard}\r\n     */\r\n    getPositionCard:function (cCard){\r\n        var index = cCard.index;\r\n        return this.getPositionVia(index);\r\n    },\r\n    getPositionVia:function(index){\r\n        var num = this.getNumCard();\r\n        var y = 0;\r\n        var startX = - 250;\r\n        var endX = 250;\r\n        var maxOffsetX = 5;\r\n        var offset = (endX - startX) / (num - 1);\r\n        if(offset > maxOffsetX) offset = maxOffsetX;\r\n        //re-call startX;\r\n        startX = startX +  (endX - startX - (offset *(num - 1)))/2;\r\n        return this.getCirclePos(new cc.Vec2(startX + (offset * index), y));\r\n    },\r\n    /**\r\n     *\r\n     * @param pos {cc.Vec2}\r\n     */\r\n    getCirclePos:function (pos) {\r\n        var x = pos.x;\r\n        pos.y = ((-1/100*(x*x))/1000 - 440);\r\n        return pos;\r\n    },\r\n    onPass:function () {\r\n        this.setMyTurn(false);\r\n        if(this.imgPass){\r\n            this.imgPass.active = true;\r\n            this.avatar.getComponent(\"CCircleAvatar\").img.node.color = cc.Color.GRAY;\r\n            this.node.runAction(cc.sequence(\r\n                cc.delayTime(2),\r\n                cc.callFunc(function () {\r\n                    this.imgPass.active = false;\r\n                    this.avatar.getComponent(\"CCircleAvatar\").img.node.color = cc.Color.WHITE;\r\n                }.bind(this))\r\n            ))\r\n        }\r\n    },\r\n    /**\r\n     *\r\n     * @param event {cc.EventTouch}\r\n     * @param card {Card}\r\n     */\r\n    onTouchCard:function (event,card,owner) {\r\n        switch (event.type) {\r\n            case cc.Node.EventType.TOUCH_START:\r\n                break;\r\n            case cc.Node.EventType.TOUCH_MOVE:\r\n                card.isDraging = true;\r\n                var pos = card.node.getParent().convertToNodeSpaceAR(event.getLocation());\r\n                card.node.setPosition(pos);\r\n                break;\r\n            case cc.Node.EventType.TOUCH_END:\r\n                card.isDraging = false;\r\n                card.isSelected = !card.isSelected;\r\n                card.node.setPosition(this.getPositionCard(card));\r\n                break;\r\n            case cc.Node.EventType.TOUCH_CANCEL:\r\n                card.isDraging = false;\r\n                card.node.setPosition(this.getPositionCard(card));\r\n                break;\r\n        }\r\n    },\r\n    onCloseTurn:function(){\r\n        cc.log(\"onCloseTurn:\" + this.player.index);\r\n        if(this.player.index === 0){\r\n            this.node.stopAllActions();\r\n            this.node.runAction(cc.scaleTo(0.5,1,1));\r\n            // this.node.scale = 1;\r\n        }\r\n    }\r\n    ,\r\n    onEnterTurn:function () {\r\n        if(this.player.index === 0) {\r\n            this.node.runAction(cc.scaleTo(0.5,1.2,1.2).easing(cc.easeBackOut()));\r\n            // this.node.scale = 1.17;\r\n            // return;\r\n        }\r\n        this.progressBar.progress = 1;\r\n        this.setMyTurn(true);\r\n    },\r\n    setMyTurn:function (b) {\r\n        this._isMyTurn = b;\r\n        this.progressBar.node.active = b;\r\n        var len = this.cards.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var cardPrefab = this.cards[i];\r\n            var cCard = cardPrefab.getComponent(\"CCard\");\r\n            cCard.setSuggest(true);\r\n        }\r\n        if(!b){\r\n            this.headProgressBar.stopSystem();\r\n        }else{\r\n            this.headProgressBar.resetSystem();\r\n        }\r\n        // this.headProgressBar.active = b;\r\n    },\r\n    onSuggestCard:function (cards) {\r\n        var isContain = function (card) {\r\n            var l = cards.length;\r\n            for (var i = 0; i < l; i++) {\r\n                if(cards[i].id === card.id){\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        var len = this.cards.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var cardPrefab = this.cards[i];\r\n            var cCard = cardPrefab.getComponent(\"CCard\");\r\n            cCard.setSuggest(isContain(cCard.card));\r\n        }\r\n    }\r\n    \r\n});\r\nmodule.exports = CPlayer;\r\n"]}