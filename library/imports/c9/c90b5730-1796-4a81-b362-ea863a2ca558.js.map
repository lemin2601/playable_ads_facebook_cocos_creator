{"version":3,"sources":["assets\\scripts\\CPlayer.js"],"names":["Types","require","Utility","CPlayer","cc","Class","Component","properties","avatar","Node","displayName","Label","gold","spriteAvatar","type","SpriteFrame","layerCard","imgPass","progressBar","ProgressBar","headProgressBar","ParticleSystem","ctor","player","gameController","cards","_isMyTurn","onLoad","setMyTurn","string","name","formatMoneyFull","_loadCards","console","error","active","start","update","dt","progress","p","Vec2","rotate","node","setPosition","setGameController","setPlayer","updateUI","i","length","c","cardPrefab","getNewCard","cCard","getComponent","setCard","index","setOwner","getPositionCard","r","getRotationCard","angle","addChild","push","setLayerCard","onDiscard","cardPrefabs","isContain","id","len","card","unshift","splice","_updatePosCards","k","setPositionCenter","getPosition","log","getNumCard","getRotationVia","num","y","startX","endX","maxOffsetX","offset","getPositionVia","getCirclePos","pos","x","onPass","runAction","sequence","delayTime","callFunc","bind","onTouchCard","event","owner","EventType","TOUCH_START","TOUCH_MOVE","isDraging","getParent","convertToNodeSpaceAR","getLocation","TOUCH_END","isSelected","TOUCH_CANCEL","onEnterTurn","b","setSuggest","stopSystem","resetSystem","onSuggestCard","l","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var Types = require(\"Types\");\r\nvar Utility = require(\"Utility\");\r\n\r\nvar CPlayer = cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        avatar:cc.Node,\r\n        displayName:cc.Label,\r\n        gold:cc.Label,\r\n        spriteAvatar:{\r\n            default:[],\r\n            type:[cc.SpriteFrame]\r\n        },\r\n        layerCard:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        imgPass:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        progressBar:{\r\n            default:null,\r\n            type:cc.ProgressBar\r\n        },\r\n        headProgressBar:{\r\n            default:null,\r\n            type:cc.ParticleSystem\r\n        }\r\n    },\r\n    ctor:function(){\r\n        /** @type {Player}*/\r\n        this.player = null;\r\n        /** @type {GameController}*/\r\n        this.gameController = null;\r\n        /** @type {[cardPrefab]}*/\r\n        this.cards = [];\r\n        this._isMyTurn = false;\r\n    },\r\n    onLoad:function(){\r\n        this.setMyTurn(this._isMyTurn);\r\n        if(this.player){\r\n            this.displayName.string = this.player.name;\r\n            this.gold.string = Utility.formatMoneyFull(this.player.gold);\r\n\r\n            // var circleAvatar = this.avatar.getComponent(\"CCircleAvatar\");\r\n            // circleAvatar.changeAvatar(this.spriteAvatar[this.player.avatar]);\r\n\r\n            //loadCards\r\n            this._loadCards();\r\n        }else{\r\n            console.error(\"need load setPlayer info onLoad\");\r\n        }\r\n        if(this.imgPass){\r\n            this.imgPass.active = false;\r\n        }\r\n    },\r\n    start:function () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        if(this._isMyTurn){\r\n            var progressBar = this.progressBar;\r\n            var progress = progressBar.progress;\r\n            if(progress > 0){\r\n                progress -= (dt * 0.1);\r\n            }\r\n            progressBar.progress = progress;\r\n\r\n            var p = new cc.Vec2(0,70);\r\n            p = p.rotate(progress * 2 * 3.14);\r\n            this.headProgressBar.node.setPosition(p);\r\n        }\r\n    },\r\n\r\n    setGameController:function(gameController){\r\n        this.gameController = gameController;\r\n    },\r\n    setPlayer:function (player) {\r\n        this.player = player;\r\n    },\r\n    updateUI:function () {\r\n\r\n    },\r\n    _loadCards:function () {\r\n        if(this.gameController){\r\n            var cards = this.player.cards;\r\n            for (var i = 0; i < cards.length; i++) {\r\n                var c = cards[i];\r\n                var cardPrefab = this.gameController.getNewCard();\r\n                var cCard = cardPrefab.getComponent(\"CCard\");\r\n\r\n                cCard.setCard(c);\r\n                cCard.index = (i);\r\n                cCard.setOwner(this);\r\n\r\n                var p = this.getPositionCard(cCard);\r\n                var r = this.getRotationCard(cCard);\r\n                cardPrefab.setPosition(p);\r\n                cardPrefab.angle = (-r);\r\n                this.layerCard.addChild(cardPrefab);\r\n                this.cards.push(cardPrefab);\r\n            }\r\n        }else{\r\n            console.error(\"don't have GameControler in Player, so can't create newCard\");\r\n        }\r\n    },\r\n    setLayerCard:function(layerCard){\r\n        this.layerCard = layerCard;\r\n    },\r\n    onDiscard:function(cards){\r\n        this.setMyTurn(false);\r\n        if(this.layerCard == null){\r\n            console.error(\"you need add layerCard to player beforeDiscard\");\r\n            return [];\r\n        }\r\n        var cardPrefabs = [];\r\n        if(this.player && this.player.index === 0){\r\n            var isContain = function (c) {\r\n                for (var i = 0; i < cards.length; i++) {\r\n                    if(c.id=== cards[i].id){\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n            var len = this.cards.length;\r\n            for (var i = len - 1; i >= 0; i--) {\r\n                var cardPrefab = this.cards[i];\r\n                var cCard = cardPrefab.getComponent(\"CCard\");\r\n                if(isContain(cCard.card)){\r\n                    cardPrefabs.unshift(cardPrefab);\r\n                    this.cards.splice(i,1);\r\n                    this.player.cards.splice(i,1);\r\n                }\r\n            }\r\n            this._updatePosCards();\r\n        }else{\r\n            for (var k = 0; k < cards.length; k++) {\r\n                var cardPrefab = this.gameController.getNewCard();\r\n                var cCard = cardPrefab.getComponent(\"CCard\");\r\n                cCard.setCard(cards[k]);\r\n                cardPrefab.angle = 0;\r\n                cCard.setPositionCenter(this.node.getPosition());\r\n                cardPrefabs.push(cardPrefab);\r\n                this.layerCard.addChild(cardPrefab);\r\n            }\r\n        }\r\n        return cardPrefabs;\r\n    },\r\n    _updatePosCards:function(){\r\n        console.log(\"_updatePosCards\");\r\n        if(this.gameController){\r\n            var cards = this.cards;\r\n            for (var i = 0; i < cards.length; i++) {\r\n                var cardPrefab = cards[i];\r\n                var cCard = cardPrefab.getComponent(\"CCard\");\r\n\r\n                cCard.index = (i);\r\n\r\n                var p = this.getPositionCard(cCard);\r\n                var r = this.getRotationCard(cCard);\r\n                cardPrefab.setPosition(p);\r\n                cardPrefab.angle = (-r);\r\n            }\r\n        }else{\r\n            console.error(\"don't have GameControler in Player, so can't create newCard\");\r\n        }\r\n    },\r\n\r\n    getNumCard:function(){\r\n        if(this.player){\r\n            return this.player.cards.length;\r\n        }\r\n        return 1;\r\n    },\r\n    getRotationCard:function (cCard) {\r\n        var index = cCard.index;\r\n        return this.getRotationVia(index);\r\n    },\r\n\r\n    getRotationVia:function(index){\r\n        var num = this.getNumCard();\r\n        var y = 0;\r\n        var startX = -60;\r\n        var endX = 48;\r\n        var maxOffsetX = 12;\r\n        var offset = (endX - startX) / (num - 1);\r\n        if(offset > maxOffsetX) offset = maxOffsetX;\r\n        //re-call startX;\r\n        startX = startX +  (endX - startX - (offset *(num - 1)))/2;\r\n        return startX + (offset * index);\r\n    },\r\n    /**\r\n     *\r\n     * @param cCard {CCard}\r\n     */\r\n    getPositionCard:function (cCard){\r\n        var index = cCard.index;\r\n        return this.getPositionVia(index);\r\n    },\r\n    getPositionVia:function(index){\r\n        var num = this.getNumCard();\r\n        var y = 0;\r\n        var startX = - 250;\r\n        var endX = 250;\r\n        var maxOffsetX = 5;\r\n        var offset = (endX - startX) / (num - 1);\r\n        if(offset > maxOffsetX) offset = maxOffsetX;\r\n        //re-call startX;\r\n        startX = startX +  (endX - startX - (offset *(num - 1)))/2;\r\n        return this.getCirclePos(new cc.Vec2(startX + (offset * index), y));\r\n    },\r\n    /**\r\n     *\r\n     * @param pos {cc.Vec2}\r\n     */\r\n    getCirclePos:function (pos) {\r\n        var x = pos.x;\r\n        pos.y = (-1/250*(x*x) - 450 + 120);\r\n        return pos;\r\n    },\r\n    onPass:function () {\r\n        this.setMyTurn(false);\r\n        if(this.imgPass){\r\n            this.imgPass.active = true;\r\n            this.node.runAction(cc.sequence(\r\n                cc.delayTime(2),\r\n                cc.callFunc(function () {\r\n                    this.imgPass.active = false;\r\n                }.bind(this))\r\n            ))\r\n        }\r\n    },\r\n    /**\r\n     *\r\n     * @param event {cc.EventTouch}\r\n     * @param card {Card}\r\n     */\r\n    onTouchCard:function (event,card,owner) {\r\n        switch (event.type) {\r\n            case cc.Node.EventType.TOUCH_START:\r\n                break;\r\n            case cc.Node.EventType.TOUCH_MOVE:\r\n                card.isDraging = true;\r\n                var pos = card.node.getParent().convertToNodeSpaceAR(event.getLocation());\r\n                card.node.setPosition(pos);\r\n                break;\r\n            case cc.Node.EventType.TOUCH_END:\r\n                card.isDraging = false;\r\n                card.isSelected = !card.isSelected;\r\n                card.node.setPosition(this.getPositionCard(card));\r\n                break;\r\n            case cc.Node.EventType.TOUCH_CANCEL:\r\n                card.isDraging = false;\r\n                card.node.setPosition(this.getPositionCard(card));\r\n                break;\r\n        }\r\n    },\r\n    onEnterTurn:function () {\r\n        if(this.player.index === 0) return;\r\n        this.progressBar.progress = 1;\r\n        this.setMyTurn(true);\r\n    },\r\n    setMyTurn:function (b) {\r\n        this._isMyTurn = b;\r\n        this.progressBar.node.active = b;\r\n        var len = this.cards.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var cardPrefab = this.cards[i];\r\n            var cCard = cardPrefab.getComponent(\"CCard\");\r\n            cCard.setSuggest(true);\r\n        }\r\n        if(!b){\r\n            this.headProgressBar.stopSystem();\r\n        }else{\r\n            this.headProgressBar.resetSystem();\r\n        }\r\n        this.headProgressBar.active = b;\r\n    },\r\n    onSuggestCard:function (cards) {\r\n        var isContain = function (card) {\r\n            var l = cards.length;\r\n            for (var i = 0; i < l; i++) {\r\n                if(cards[i].id === card.id){\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        var len = this.cards.length;\r\n        for (var i = 0; i < len; i++) {\r\n            var cardPrefab = this.cards[i];\r\n            var cCard = cardPrefab.getComponent(\"CCard\");\r\n            cCard.setSuggest(isContain(cCard.card));\r\n        }\r\n    }\r\n    \r\n});\r\nmodule.exports = CPlayer;\r\n"]}